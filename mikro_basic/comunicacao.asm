;  Assembly code generated by mikroVirtualMachine - V. 5.0.0.3
;  Date/Time: 03/03/2021 20:27:35
;  Info: http://www.mikroe.com


; ADDRESS	OPCODE	ASM
; ----------------------------------------------
$0000	$2804			GOTO	_main
$03E7	$	_div_16x16_s_l:
$03E7	$1303			BCF	STATUS, RP1
$03E8	$1283			BCF	STATUS, RP0
;math.ppas,291 :: 		
;math.ppas,293 :: 		
$03E9	$0D71			RLF	STACK_1, W
;math.ppas,294 :: 		
$03EA	$0DF8			RLF	STACK_8, F
;math.ppas,295 :: 		
$03EB	$0DF9			RLF	STACK_9, F
;math.ppas,296 :: 		
$03EC	$0874			MOVF	STACK_4, W
;math.ppas,297 :: 		
$03ED	$02F8			SUBWF	STACK_8, F
;math.ppas,298 :: 		
$03EE	$0875			MOVF	STACK_5, W
;math.ppas,299 :: 		
$03EF	$1C03			BTFSS	STATUS, C
;math.ppas,300 :: 		
$03F0	$0F75			INCFSZ	STACK_5, W
;math.ppas,301 :: 		
$03F1	$02F9			SUBWF	STACK_9, F
;math.ppas,302 :: 		
$03F2	$0DF0			RLF	STACK_0, F
;math.ppas,304 :: 		
$03F3	$0DF1			RLF	STACK_1, F
;math.ppas,305 :: 		
$03F4	$300F			MOVLW	15
;math.ppas,307 :: 		
$03F5	$00FC			MOVWF	STACK_12
;math.ppas,308 :: 		
$03F6	$0D71			RLF	STACK_1, W
;math.ppas,309 :: 		
$03F7	$0DF8			RLF	STACK_8, F
;math.ppas,310 :: 		
$03F8	$0DF9			RLF	STACK_9, F
;math.ppas,312 :: 		
$03F9	$0874			MOVF	STACK_4, W
;math.ppas,313 :: 		
$03FA	$1C70			BTFSS	STACK_0, 0
;math.ppas,314 :: 		
$03FB	$2C02			GOTO	$+7
;math.ppas,315 :: 		
$03FC	$02F8			SUBWF	STACK_8, F
;math.ppas,316 :: 		
$03FD	$0875			MOVF	STACK_5, W
;math.ppas,317 :: 		
$03FE	$1C03			BTFSS	STATUS, C
;math.ppas,318 :: 		
$03FF	$0F75			INCFSZ	STACK_5, W
;math.ppas,319 :: 		
$0400	$02F9			SUBWF	STACK_9, F
;math.ppas,321 :: 		
$0401	$2C07			GOTO	$+6
;math.ppas,322 :: 		
$0402	$07F8			ADDWF	STACK_8, F
;math.ppas,323 :: 		
$0403	$0875			MOVF	STACK_5, W
;math.ppas,324 :: 		
$0404	$1803			BTFSC	STATUS, C
;math.ppas,325 :: 		
$0405	$0F75			INCFSZ	STACK_5, W
;math.ppas,327 :: 		
$0406	$07F9			ADDWF	STACK_9, F
;math.ppas,328 :: 		
$0407	$0DF0			RLF	STACK_0, F
;math.ppas,330 :: 		
$0408	$0DF1			RLF	STACK_1, F
;math.ppas,331 :: 		
$0409	$0BFC			DECFSZ	STACK_12, F
;math.ppas,333 :: 		
$040A	$2BF6			GOTO	$-20
;math.ppas,334 :: 		
$040B	$1870			BTFSC	STACK_0, 0
;math.ppas,335 :: 		
$040C	$2C13			GOTO	$+7
;math.ppas,336 :: 		
$040D	$0874			MOVF	STACK_4, W
;math.ppas,337 :: 		
$040E	$07F8			ADDWF	STACK_8, F
;math.ppas,338 :: 		
$040F	$0875			MOVF	STACK_5, W
;math.ppas,339 :: 		
$0410	$1803			BTFSC	STATUS, C
;math.ppas,340 :: 		
$0411	$0F75			INCFSZ	STACK_5, W
;math.ppas,341 :: 		
$0412	$07F9			ADDWF	STACK_9, F
;math.ppas,342 :: 		
$0413	$	math_L_6:
;math.ppas,343 :: 		
$0413	$0008			RETURN
$04E0	$	_res032:
$04E0	$1303			BCF	STATUS, RP1
$04E1	$1283			BCF	STATUS, RP0
;math_double.ppas,56 :: 		
;math_double.ppas,61 :: 		
$04E2	$01F2			CLRF	STACK_2
;math_double.ppas,62 :: 		
$04E3	$01F1			CLRF	STACK_1
;math_double.ppas,63 :: 		
$04E4	$01F0			CLRF	STACK_0
;math_double.ppas,64 :: 		
$04E5	$01F8			CLRF	STACK_8
;math_double.ppas,65 :: 		
$04E6	$01F3			CLRF	STACK_3
;math_double.ppas,66 :: 		
$04E7	$3000			MOVLW	0
;math_double.ppas,67 :: 		
$04E8	$	math_double_L_3:
;math_double.ppas,68 :: 		
$04E8	$0008			RETURN
$04C5	$	_setfun32:
$04C5	$1303			BCF	STATUS, RP1
$04C6	$1283			BCF	STATUS, RP0
;math_double.ppas,71 :: 		
;math_double.ppas,78 :: 		
$04C7	$157B			BSF	STACK_11, 2
;math_double.ppas,79 :: 		
$04C8	$1FFB			BTFSS	STACK_11, 7
;math_double.ppas,80 :: 		
$04C9	$2CD1			GOTO	SETFUN32EEE
;math_double.ppas,81 :: 		
$04CA	$3001			MOVLW	0X01
;math_double.ppas,82 :: 		
$04CB	$00F3			MOVWF	STACK_3
;math_double.ppas,83 :: 		
$04CC	$01F2			CLRF	STACK_2
;math_double.ppas,84 :: 		
$04CD	$01F1			CLRF	STACK_1
;math_double.ppas,85 :: 		
$04CE	$01F0			CLRF	STACK_0
;math_double.ppas,86 :: 		
$04CF	$0DFA			RLF	STACK_10, F
;math_double.ppas,87 :: 		
$04D0	$0CF2			RRF	STACK_2, F
;math_double.ppas,88 :: 		
$04D1	$	SETFUN32EEE:
;math_double.ppas,89 :: 		
$04D1	$30FF			MOVLW	0XFF
;math_double.ppas,90 :: 		
$04D2	$	math_double_L_4:
;math_double.ppas,91 :: 		
$04D2	$0008			RETURN
$04F0	$	_fixsign32:
$04F0	$1303			BCF	STATUS, RP1
$04F1	$1283			BCF	STATUS, RP0
;math_double.ppas,45 :: 		
;math_double.ppas,49 :: 		
$04F2	$1FFA			BTFSS	STACK_10, 7
;math_double.ppas,50 :: 		
$04F3	$13F2			BCF	STACK_2, 7
;math_double.ppas,51 :: 		
$04F4	$3000			MOVLW	0
;math_double.ppas,52 :: 		
$04F5	$	math_double_L_2:
;math_double.ppas,53 :: 		
$04F5	$0008			RETURN
$04B7	$	_setfov32:
$04B7	$1303			BCF	STATUS, RP1
$04B8	$1283			BCF	STATUS, RP0
;math_double.ppas,11 :: 		
;math_double.ppas,18 :: 		
$04B9	$14FB			BSF	STACK_11, 1
;math_double.ppas,19 :: 		
$04BA	$1FFB			BTFSS	STACK_11, 7
;math_double.ppas,20 :: 		
$04BB	$2CC3			GOTO	SETFOV32EEE
;math_double.ppas,21 :: 		
$04BC	$30FF			MOVLW	0XFF
;math_double.ppas,22 :: 		
$04BD	$00F3			MOVWF	STACK_3
;math_double.ppas,23 :: 		
$04BE	$00F2			MOVWF	STACK_2
;math_double.ppas,24 :: 		
$04BF	$00F1			MOVWF	STACK_1
;math_double.ppas,25 :: 		
$04C0	$00F0			MOVWF	STACK_0
;math_double.ppas,26 :: 		
$04C1	$0DFA			RLF	STACK_10, F
;math_double.ppas,27 :: 		
$04C2	$0CF2			RRF	STACK_2, F
;math_double.ppas,28 :: 		
$04C3	$	SETFOV32EEE:
;math_double.ppas,29 :: 		
$04C3	$30FF			MOVLW	0XFF
;math_double.ppas,30 :: 		
$04C4	$	math_double_L_0:
;math_double.ppas,31 :: 		
$04C4	$0008			RETURN
$0496	$	_usart_write:
;USART_b75.ppas,40 :: 		
;USART_b75.ppas,42 :: 		
$0496	$	USART_b75_L_14:
$0496	$1303			BCF	STATUS, RP1
$0497	$1683			BSF	STATUS, RP0
$0498	$0818			MOVF	TXSTA, 0
$0499	$00F1			MOVWF	STACK_1
$049A	$3000			MOVLW	0
$049B	$18F1			BTFSC	STACK_1, 1
$049C	$3001			MOVLW	1
$049D	$00F1			MOVWF	STACK_1
$049E	$0871			MOVF	STACK_1, 0
$049F	$3A00			XORLW	0
$04A0	$1D03			BTFSS	STATUS, Z
$04A1	$2CA4			GOTO	USART_b75_L_15
;USART_b75.ppas,43 :: 		
$04A2	$0000			NOP
$04A3	$2C96			GOTO	USART_b75_L_14
$04A4	$	USART_b75_L_15:
;USART_b75.ppas,44 :: 		
$04A4	$1283			BCF	STATUS, RP0
$04A5	$083C			MOVF	FARG_USART_Write, 0
$04A6	$0099			MOVWF	TXREG
$04A7	$	USART_b75_L_12:
;USART_b75.ppas,45 :: 		
$04A7	$0008			RETURN
$04E9	$	_delay_22us:
;delays.pbas,17 :: 		sub procedure Delay_22us()
;delays.pbas,18 :: 		Delay_us(22)
$04E9	$3007			MOVLW	7
$04EA	$1303			BCF	STATUS, RP1
$04EB	$1283			BCF	STATUS, RP0
$04EC	$00FA			MOVWF	STACK_10
$04ED	$0BFA			DECFSZ	STACK_10, F
$04EE	$2CED			GOTO	$-1
$04EF	$	delays_L_3:
$04EF	$0008			RETURN
$0323	$	_div_16x16_s:
$0323	$1303			BCF	STATUS, RP1
$0324	$1283			BCF	STATUS, RP0
;math.ppas,346 :: 		
;math.ppas,348 :: 		
$0325	$01FD			CLRF	STACK_13
;math.ppas,349 :: 		
$0326	$01F9			CLRF	STACK_9
;math.ppas,350 :: 		
$0327	$01F8			CLRF	STACK_8
;math.ppas,351 :: 		
$0328	$0871			MOVF	STACK_1, W
;math.ppas,352 :: 		
$0329	$0470			IORWF	STACK_0, W
;math.ppas,353 :: 		
$032A	$1903			BTFSC	STATUS, Z
;math.ppas,355 :: 		
$032B	$3400			RETLW	0
;math.ppas,356 :: 		
$032C	$0871			MOVF	STACK_1, W
;math.ppas,357 :: 		
$032D	$0675			XORWF	STACK_5, W
;math.ppas,358 :: 		
$032E	$00FA			MOVWF	STACK_10
;math.ppas,359 :: 		
$032F	$1BFA			BTFSC	STACK_10, 7
;math.ppas,361 :: 		
$0330	$09FD			COMF	STACK_13, F
;math.ppas,363 :: 		
$0331	$01FB			CLRF	STACK_11
;math.ppas,364 :: 		
$0332	$1FF5			BTFSS	STACK_5, 7
;math.ppas,366 :: 		
$0333	$2B39			GOTO	$+6
;math.ppas,367 :: 		
$0334	$09F4			COMF	STACK_4, F
;math.ppas,368 :: 		
$0335	$09F5			COMF	STACK_5, F
;math.ppas,369 :: 		
$0336	$0AF4			INCF	STACK_4, F
;math.ppas,370 :: 		
$0337	$1903			BTFSC	STATUS, Z
;math.ppas,372 :: 		
$0338	$0AF5			INCF	STACK_5, F
;math.ppas,373 :: 		
$0339	$1FF1			BTFSS	STACK_1, 7
;math.ppas,375 :: 		
$033A	$2B40			GOTO	$+6
;math.ppas,376 :: 		
$033B	$09F0			COMF	STACK_0, F
;math.ppas,377 :: 		
$033C	$09F1			COMF	STACK_1, F
;math.ppas,378 :: 		
$033D	$0AF0			INCF	STACK_0, F
;math.ppas,379 :: 		
$033E	$1903			BTFSC	STATUS, Z
;math.ppas,381 :: 		
$033F	$0AF1			INCF	STACK_1, F
;math.ppas,382 :: 		
$0340	$0871			MOVF	STACK_1, W
;math.ppas,383 :: 		
$0341	$0475			IORWF	STACK_5, W
;math.ppas,384 :: 		
$0342	$00FA			MOVWF	STACK_10
;math.ppas,385 :: 		
$0343	$1BFA			BTFSC	STACK_10, 7
;math.ppas,386 :: 		
$0344	$2B55			GOTO	$+17
;math.ppas,388 :: 		
$0345	$23E7			CALL	_div_16x16_s_l
;math.ppas,390 :: 		
$0346	$187B			BTFSC	STACK_11, 0
;math.ppas,392 :: 		
$0347	$2B68			GOTO	$+33
;math.ppas,393 :: 		
$0348	$1FFD			BTFSS	STACK_13, 7
;math.ppas,395 :: 		
$0349	$3400			RETLW	0
;math.ppas,396 :: 		
$034A	$09F0			COMF	STACK_0, F
;math.ppas,397 :: 		
$034B	$09F1			COMF	STACK_1, F
;math.ppas,398 :: 		
$034C	$0AF0			INCF	STACK_0, F
;math.ppas,399 :: 		
$034D	$1903			BTFSC	STATUS, Z
;math.ppas,401 :: 		
$034E	$0AF1			INCF	STACK_1, F
;math.ppas,402 :: 		
$034F	$09F8			COMF	STACK_8, F
;math.ppas,403 :: 		
$0350	$09F9			COMF	STACK_9, F
;math.ppas,404 :: 		
$0351	$0AF8			INCF	STACK_8, F
;math.ppas,405 :: 		
$0352	$1903			BTFSC	STATUS, Z
;math.ppas,407 :: 		
$0353	$0AF9			INCF	STACK_9, F
;math.ppas,409 :: 		
$0354	$3400			RETLW	0
;math.ppas,410 :: 		
$0355	$1FF5			BTFSS	STACK_5, 7
;math.ppas,411 :: 		
$0356	$2B64			GOTO	$+14
;math.ppas,412 :: 		
$0357	$1BF1			BTFSC	STACK_1, 7
;math.ppas,413 :: 		
$0358	$2B60			GOTO	$+8
;math.ppas,414 :: 		
$0359	$0871			MOVF	STACK_1, W
;math.ppas,415 :: 		
$035A	$00F9			MOVWF	STACK_9
;math.ppas,416 :: 		
$035B	$0870			MOVF	STACK_0, W
;math.ppas,417 :: 		
$035C	$00F8			MOVWF	STACK_8
;math.ppas,418 :: 		
$035D	$01F1			CLRF	STACK_1
;math.ppas,419 :: 		
$035E	$01F0			CLRF	STACK_0
;math.ppas,420 :: 		
$035F	$2B48			GOTO	$-23
;math.ppas,421 :: 		
$0360	$01F1			CLRF	STACK_1
;math.ppas,422 :: 		
$0361	$01F0			CLRF	STACK_0
;math.ppas,423 :: 		
$0362	$0AF0			INCF	STACK_0, F
;math.ppas,425 :: 		
$0363	$3400			RETLW	0
;math.ppas,426 :: 		
$0364	$09F1			COMF	STACK_1, F
;math.ppas,427 :: 		
$0365	$09F0			COMF	STACK_0, F
;math.ppas,428 :: 		
$0366	$0AFB			INCF	STACK_11, F
;math.ppas,430 :: 		
$0367	$2B45			GOTO	$-34
;math.ppas,431 :: 		
$0368	$0AF8			INCF	STACK_8, F
;math.ppas,432 :: 		
$0369	$1903			BTFSC	STATUS, Z
;math.ppas,433 :: 		
$036A	$0AF9			INCF	STACK_9, F
;math.ppas,434 :: 		
$036B	$0874			MOVF	STACK_4, W
;math.ppas,435 :: 		
$036C	$0278			SUBWF	STACK_8, W
;math.ppas,436 :: 		
$036D	$1D03			BTFSS	STATUS, Z
;math.ppas,437 :: 		
$036E	$2B48			GOTO	$-38
;math.ppas,438 :: 		
$036F	$0875			MOVF	STACK_5, W
;math.ppas,439 :: 		
$0370	$0279			SUBWF	STACK_9, W
;math.ppas,440 :: 		
$0371	$1D03			BTFSS	STATUS, Z
;math.ppas,441 :: 		
$0372	$2B48			GOTO	$-42
;math.ppas,442 :: 		
$0373	$01F9			CLRF	STACK_9
;math.ppas,443 :: 		
$0374	$01F8			CLRF	STACK_8
;math.ppas,444 :: 		
$0375	$0AF0			INCF	STACK_0, F
;math.ppas,445 :: 		
$0376	$1903			BTFSC	STATUS, Z
;math.ppas,446 :: 		
$0377	$0AF1			INCF	STACK_1, F
;math.ppas,447 :: 		
$0378	$1FF1			BTFSS	STACK_1, 7
;math.ppas,448 :: 		
$0379	$2B48			GOTO	$-49
;math.ppas,449 :: 		
$037A	$0000			NOP
;math.ppas,450 :: 		
$037B	$34FF			RETLW	255
;math.ppas,451 :: 		
$037C	$	math_L_7:
;math.ppas,452 :: 		
$037C	$0008			RETURN
$026A	$	_nrm4032:
$026A	$1303			BCF	STATUS, RP1
$026B	$1283			BCF	STATUS, RP0
;math_double.ppas,178 :: 		
;math_double.ppas,187 :: 		
$026C	$187C			BTFSC	STACK_12, 0
;math_double.ppas,188 :: 		
$026D	$2AA2			GOTO	NRMRND4032
;math_double.ppas,189 :: 		
$026E	$18FC			BTFSC	STACK_12, 1
;math_double.ppas,190 :: 		
$026F	$2A73			GOTO	NRM4032
;math_double.ppas,191 :: 		
$0270	$197C			BTFSC	STACK_12, 2
;math_double.ppas,192 :: 		
$0271	$2AC1			GOTO	JMPSETFOV32
;math_double.ppas,193 :: 		
$0272	$2A6C			GOTO	$-6
;math_double.ppas,194 :: 		
$0273	$	NRM4032:
;math_double.ppas,195 :: 		
$0273	$01A0			CLRF	MATH_DOUBLE___MATH_TEMPBD
;math_double.ppas,196 :: 		
$0274	$0872			MOVF	STACK_2, W
;math_double.ppas,197 :: 		
$0275	$1D03			BTFSS	STATUS, Z
;math_double.ppas,198 :: 		
$0276	$2A93			GOTO	NORM4032
;math_double.ppas,199 :: 		
$0277	$0871			MOVF	STACK_1, W
;math_double.ppas,200 :: 		
$0278	$00F2			MOVWF	STACK_2
;math_double.ppas,201 :: 		
$0279	$0870			MOVF	STACK_0, W
;math_double.ppas,202 :: 		
$027A	$00F1			MOVWF	STACK_1
;math_double.ppas,203 :: 		
$027B	$0878			MOVF	STACK_8, W
;math_double.ppas,204 :: 		
$027C	$00F0			MOVWF	STACK_0
;math_double.ppas,205 :: 		
$027D	$01F8			CLRF	STACK_8
;math_double.ppas,207 :: 		
$027E	$15A0			BSF	MATH_DOUBLE___MATH_TEMPBD, 3
;math_double.ppas,208 :: 		
$027F	$0872			MOVF	STACK_2, W
;math_double.ppas,209 :: 		
$0280	$1D03			BTFSS	STATUS, Z
;math_double.ppas,210 :: 		
$0281	$2A93			GOTO	NORM4032
;math_double.ppas,211 :: 		
$0282	$0871			MOVF	STACK_1, W
;math_double.ppas,212 :: 		
$0283	$00F2			MOVWF	STACK_2
;math_double.ppas,213 :: 		
$0284	$0870			MOVF	STACK_0, W
;math_double.ppas,214 :: 		
$0285	$00F1			MOVWF	STACK_1
;math_double.ppas,215 :: 		
$0286	$01F0			CLRF	STACK_0
;math_double.ppas,216 :: 		
$0287	$11A0			BCF	MATH_DOUBLE___MATH_TEMPBD, 3
;math_double.ppas,218 :: 		
$0288	$1620			BSF	MATH_DOUBLE___MATH_TEMPBD, 4
;math_double.ppas,219 :: 		
$0289	$0872			MOVF	STACK_2, W
;math_double.ppas,220 :: 		
$028A	$1D03			BTFSS	STATUS, Z
;math_double.ppas,221 :: 		
$028B	$2A93			GOTO	NORM4032
;math_double.ppas,222 :: 		
$028C	$0871			MOVF	STACK_1, W
;math_double.ppas,223 :: 		
$028D	$00F2			MOVWF	STACK_2
;math_double.ppas,224 :: 		
$028E	$01F1			CLRF	STACK_1
;math_double.ppas,226 :: 		
$028F	$15A0			BSF	MATH_DOUBLE___MATH_TEMPBD, 3
;math_double.ppas,227 :: 		
$0290	$0872			MOVF	STACK_2, W
;math_double.ppas,228 :: 		
$0291	$1903			BTFSC	STATUS, Z
;math_double.ppas,229 :: 		
$0292	$2AB5			GOTO	JMPRES032
;math_double.ppas,230 :: 		
$0293	$	NORM4032:
;math_double.ppas,231 :: 		
$0293	$0820			MOVF	MATH_DOUBLE___MATH_TEMPBD, W
;math_double.ppas,232 :: 		
$0294	$02F3			SUBWF	STACK_3, F
;math_double.ppas,233 :: 		
$0295	$1D03			BTFSS	STATUS, Z
;math_double.ppas,234 :: 		
$0296	$1C03			BTFSS	STATUS, C
;math_double.ppas,235 :: 		
$0297	$2AB9			GOTO	JMPSETFUN32
;math_double.ppas,236 :: 		
$0298	$1003			BCF	STATUS, C
;math_double.ppas,237 :: 		
$0299	$	NORM4032A:
;math_double.ppas,238 :: 		
$0299	$1BF2			BTFSC	STACK_2, 7
;math_double.ppas,239 :: 		
$029A	$2AA2			GOTO	NRMRND4032
;math_double.ppas,240 :: 		
$029B	$0DF8			RLF	STACK_8, F
;math_double.ppas,241 :: 		
$029C	$0DF0			RLF	STACK_0, F
;math_double.ppas,242 :: 		
$029D	$0DF1			RLF	STACK_1, F
;math_double.ppas,243 :: 		
$029E	$0DF2			RLF	STACK_2, F
;math_double.ppas,244 :: 		
$029F	$0BF3			DECFSZ	STACK_3, F
;math_double.ppas,245 :: 		
$02A0	$2A99			GOTO	NORM4032A
;math_double.ppas,246 :: 		
$02A1	$2AB9			GOTO	JMPSETFUN32
;math_double.ppas,247 :: 		
$02A2	$	NRMRND4032:
;math_double.ppas,248 :: 		
$02A2	$1B7B			BTFSC	STACK_11, 6
;math_double.ppas,249 :: 		
$02A3	$1C70			BTFSS	STACK_0, 0
;math_double.ppas,250 :: 		
$02A4	$2ABD			GOTO	JMPFIXSIGN32
;math_double.ppas,251 :: 		
$02A5	$1FF8			BTFSS	STACK_8, 7
;math_double.ppas,252 :: 		
$02A6	$2ABD			GOTO	JMPFIXSIGN32
;math_double.ppas,253 :: 		
$02A7	$0AF0			INCF	STACK_0, F
;math_double.ppas,254 :: 		
$02A8	$1903			BTFSC	STATUS, Z
;math_double.ppas,255 :: 		
$02A9	$0AF1			INCF	STACK_1, F
;math_double.ppas,256 :: 		
$02AA	$1903			BTFSC	STATUS, Z
;math_double.ppas,257 :: 		
$02AB	$0AF2			INCF	STACK_2, F
;math_double.ppas,258 :: 		
$02AC	$1D03			BTFSS	STATUS, Z
;math_double.ppas,259 :: 		
$02AD	$2ABD			GOTO	JMPFIXSIGN32
;math_double.ppas,260 :: 		
$02AE	$0CF2			RRF	STACK_2, F
;math_double.ppas,261 :: 		
$02AF	$0CF1			RRF	STACK_1, F
;math_double.ppas,262 :: 		
$02B0	$0CF0			RRF	STACK_0, F
;math_double.ppas,263 :: 		
$02B1	$0AF3			INCF	STACK_3, F
;math_double.ppas,264 :: 		
$02B2	$1903			BTFSC	STATUS, Z
;math_double.ppas,265 :: 		
$02B3	$2AC1			GOTO	JMPSETFOV32
;math_double.ppas,266 :: 		
$02B4	$2ABD			GOTO	JMPFIXSIGN32
;math_double.ppas,267 :: 		
$02B5	$	JMPRES032:
;math_double.ppas,268 :: 		
$02B5	$3001			MOVLW	0X01
;math_double.ppas,269 :: 		
$02B6	$00FC			MOVWF	STACK_12
;math_double.ppas,271 :: 		
$02B7	$24E0			CALL	_res032
;math_double.ppas,273 :: 		
$02B8	$2AC4			GOTO	NRM4032EEE
;math_double.ppas,274 :: 		
$02B9	$	JMPSETFUN32:
;math_double.ppas,275 :: 		
$02B9	$3002			MOVLW	0X02
;math_double.ppas,276 :: 		
$02BA	$00FC			MOVWF	STACK_12
;math_double.ppas,278 :: 		
$02BB	$24C5			CALL	_setfun32
;math_double.ppas,280 :: 		
$02BC	$2AC4			GOTO	NRM4032EEE
;math_double.ppas,281 :: 		
$02BD	$	JMPFIXSIGN32:
;math_double.ppas,282 :: 		
$02BD	$3004			MOVLW	0X04
;math_double.ppas,283 :: 		
$02BE	$00FC			MOVWF	STACK_12
;math_double.ppas,285 :: 		
$02BF	$24F0			CALL	_fixsign32
;math_double.ppas,287 :: 		
$02C0	$2AC4			GOTO	NRM4032EEE
;math_double.ppas,288 :: 		
$02C1	$	JMPSETFOV32:
;math_double.ppas,289 :: 		
$02C1	$3008			MOVLW	0X08
;math_double.ppas,290 :: 		
$02C2	$00FC			MOVWF	STACK_12
;math_double.ppas,292 :: 		
$02C3	$24B7			CALL	_setfov32
;math_double.ppas,294 :: 		
$02C4	$	NRM4032EEE:
;math_double.ppas,295 :: 		
$02C4	$0000			NOP
;math_double.ppas,296 :: 		
$02C5	$	math_double_L_6:
;math_double.ppas,297 :: 		
$02C5	$0008			RETURN
$037D	$	_nrm3232:
$037D	$1303			BCF	STATUS, RP1
$037E	$1283			BCF	STATUS, RP0
;math_double.ppas,100 :: 		
;math_double.ppas,108 :: 		
$037F	$01A0			CLRF	MATH_DOUBLE___MATH_TEMPBD
;math_double.ppas,109 :: 		
$0380	$0872			MOVF	STACK_2, W
;math_double.ppas,110 :: 		
$0381	$1D03			BTFSS	STATUS, Z
;math_double.ppas,111 :: 		
$0382	$2B94			GOTO	NORM3232
;math_double.ppas,112 :: 		
$0383	$0871			MOVF	STACK_1, W
;math_double.ppas,113 :: 		
$0384	$00F2			MOVWF	STACK_2
;math_double.ppas,114 :: 		
$0385	$0870			MOVF	STACK_0, W
;math_double.ppas,115 :: 		
$0386	$00F1			MOVWF	STACK_1
;math_double.ppas,116 :: 		
$0387	$01F0			CLRF	STACK_0
;math_double.ppas,118 :: 		
$0388	$15A0			BSF	MATH_DOUBLE___MATH_TEMPBD, 3
;math_double.ppas,119 :: 		
$0389	$0872			MOVF	STACK_2, W
;math_double.ppas,120 :: 		
$038A	$1D03			BTFSS	STATUS, Z
;math_double.ppas,121 :: 		
$038B	$2B94			GOTO	NORM3232
;math_double.ppas,122 :: 		
$038C	$0871			MOVF	STACK_1, W
;math_double.ppas,123 :: 		
$038D	$00F2			MOVWF	STACK_2
;math_double.ppas,124 :: 		
$038E	$01F1			CLRF	STACK_1
;math_double.ppas,125 :: 		
$038F	$11A0			BCF	MATH_DOUBLE___MATH_TEMPBD, 3
;math_double.ppas,127 :: 		
$0390	$1620			BSF	MATH_DOUBLE___MATH_TEMPBD, 4
;math_double.ppas,128 :: 		
$0391	$0872			MOVF	STACK_2, W
;math_double.ppas,129 :: 		
$0392	$1903			BTFSC	STATUS, Z
;math_double.ppas,130 :: 		
$0393	$2BA2			GOTO	JPNRES032
;math_double.ppas,131 :: 		
$0394	$	NORM3232:
;math_double.ppas,132 :: 		
$0394	$0820			MOVF	MATH_DOUBLE___MATH_TEMPBD, W
;math_double.ppas,133 :: 		
$0395	$02F3			SUBWF	STACK_3, F
;math_double.ppas,134 :: 		
$0396	$1D03			BTFSS	STATUS, Z
;math_double.ppas,135 :: 		
$0397	$1C03			BTFSS	STATUS, C
;math_double.ppas,136 :: 		
$0398	$2BA6			GOTO	JPNSETFUN32
;math_double.ppas,137 :: 		
$0399	$1003			BCF	STATUS, C
;math_double.ppas,138 :: 		
$039A	$	NORM3232A:
;math_double.ppas,139 :: 		
$039A	$1BF2			BTFSC	STACK_2, 7
;math_double.ppas,140 :: 		
$039B	$2BAA			GOTO	JMPNFIXSIGN32
;math_double.ppas,141 :: 		
$039C	$0DF0			RLF	STACK_0, F
;math_double.ppas,142 :: 		
$039D	$0DF1			RLF	STACK_1, F
;math_double.ppas,143 :: 		
$039E	$0DF2			RLF	STACK_2, F
;math_double.ppas,144 :: 		
$039F	$0BF3			DECFSZ	STACK_3, F
;math_double.ppas,145 :: 		
$03A0	$2B9A			GOTO	NORM3232A
;math_double.ppas,146 :: 		
$03A1	$2BA6			GOTO	JPNSETFUN32
;math_double.ppas,147 :: 		
$03A2	$	JPNRES032:
;math_double.ppas,148 :: 		
$03A2	$3001			MOVLW	0X01
;math_double.ppas,149 :: 		
$03A3	$00FC			MOVWF	STACK_12
;math_double.ppas,151 :: 		
$03A4	$24E0			CALL	_res032
;math_double.ppas,153 :: 		
$03A5	$2BAD			GOTO	NORM32EEE
;math_double.ppas,154 :: 		
$03A6	$	JPNSETFUN32:
;math_double.ppas,155 :: 		
$03A6	$3002			MOVLW	0X02
;math_double.ppas,156 :: 		
$03A7	$00FC			MOVWF	STACK_12
;math_double.ppas,158 :: 		
$03A8	$24C5			CALL	_setfun32
;math_double.ppas,160 :: 		
$03A9	$2BAD			GOTO	NORM32EEE
;math_double.ppas,161 :: 		
$03AA	$	JMPNFIXSIGN32:
;math_double.ppas,162 :: 		
$03AA	$3004			MOVLW	0X04
;math_double.ppas,163 :: 		
$03AB	$00FC			MOVWF	STACK_12
;math_double.ppas,165 :: 		
$03AC	$24F0			CALL	_fixsign32
;math_double.ppas,167 :: 		
$03AD	$	NORM32EEE:
;math_double.ppas,168 :: 		
$03AD	$	math_double_L_5:
;math_double.ppas,169 :: 		
$03AD	$0008			RETURN
$04F6	$	_setfdz32:
$04F6	$1303			BCF	STATUS, RP1
$04F7	$1283			BCF	STATUS, RP0
;math_double.ppas,35 :: 		
;math_double.ppas,38 :: 		
$04F8	$15FB			BSF	STACK_11, 3
;math_double.ppas,39 :: 		
$04F9	$30FF			MOVLW	0XFF
;math_double.ppas,40 :: 		
$04FA	$	math_double_L_1:
;math_double.ppas,41 :: 		
$04FA	$0008			RETURN
$04A8	$	_setiov3224:
$04A8	$1303			BCF	STATUS, RP1
$04A9	$1283			BCF	STATUS, RP0
;math_double.ppas,888 :: 		
;math_double.ppas,894 :: 		
$04AA	$147B			BSF	STACK_11, 0
;math_double.ppas,895 :: 		
$04AB	$1FFB			BTFSS	STACK_11, 7
;math_double.ppas,897 :: 		
$04AC	$2CB5			GOTO	SETIOV3224EEE
;math_double.ppas,898 :: 		
$04AD	$01F2			CLRF	STACK_2
;math_double.ppas,899 :: 		
$04AE	$1FFA			BTFSS	STACK_10, 7
;math_double.ppas,900 :: 		
$04AF	$30FF			MOVLW	0XFF
;math_double.ppas,901 :: 		
$04B0	$00F2			MOVWF	STACK_2
;math_double.ppas,902 :: 		
$04B1	$00F1			MOVWF	STACK_1
;math_double.ppas,903 :: 		
$04B2	$00F0			MOVWF	STACK_0
;math_double.ppas,904 :: 		
$04B3	$0DFA			RLF	STACK_10, F
;math_double.ppas,905 :: 		
$04B4	$0CF2			RRF	STACK_2, F
;math_double.ppas,906 :: 		
$04B5	$	SETIOV3224EEE:
;math_double.ppas,907 :: 		
$04B5	$30FF			MOVLW	0XFF
;math_double.ppas,908 :: 		
$04B6	$	math_double_L_11:
;math_double.ppas,909 :: 		
$04B6	$0008			RETURN
$04D3	$	_usart_data_ready:
;USART_b75.ppas,48 :: 		
;USART_b75.ppas,50 :: 		
$04D3	$1303			BCF	STATUS, RP1
$04D4	$1283			BCF	STATUS, RP0
$04D5	$080C			MOVF	PIR1, 0
$04D6	$00F1			MOVWF	STACK_1
$04D7	$3000			MOVLW	0
$04D8	$1AF1			BTFSC	STACK_1, 5
$04D9	$3001			MOVLW	1
$04DA	$00F1			MOVWF	STACK_1
$04DB	$0871			MOVF	STACK_1, 0
$04DC	$00B7			MOVWF	_usart_data_ready_local_result
$04DD	$	USART_b75_L_18:
;USART_b75.ppas,51 :: 		
$04DD	$0837			MOVF	_usart_data_ready_local_result, 0
$04DE	$00F0			MOVWF	STACK_0
$04DF	$0008			RETURN
$0483	$	_usart_read:
;USART_b75.ppas,54 :: 		
;USART_b75.ppas,55 :: 		
$0483	$1303			BCF	STATUS, RP1
$0484	$1283			BCF	STATUS, RP0
$0485	$081A			MOVF	RCREG, 0
$0486	$00B7			MOVWF	_usart_read_local_result
;USART_b75.ppas,61 :: 		
$0487	$0818			MOVF	RCSTA, 0
$0488	$00F1			MOVWF	STACK_1
$0489	$3000			MOVLW	0
$048A	$18F1			BTFSC	STACK_1, 1
$048B	$3001			MOVLW	1
$048C	$00F1			MOVWF	STACK_1
$048D	$0871			MOVF	STACK_1, 0
$048E	$3A01			XORLW	1
$048F	$1D03			BTFSS	STATUS, Z
$0490	$2C93			GOTO	USART_b75_L_21
$0491	$	USART_b75_L_20:
;USART_b75.ppas,63 :: 		
$0491	$1218			BCF	RCSTA, 4
$0492	$	USART_b75_L_24:
;USART_b75.ppas,64 :: 		
$0492	$	USART_b75_L_25:
$0492	$1618			BSF	RCSTA, 4
$0493	$	USART_b75_L_26:
;USART_b75.ppas,65 :: 		
$0493	$	USART_b75_L_21:
$0493	$	USART_b75_L_22:
$0493	$	USART_b75_L_19:
;USART_b75.ppas,66 :: 		
$0493	$0837			MOVF	_usart_read_local_result, 0
$0494	$00F0			MOVWF	STACK_0
$0495	$0008			RETURN
$0432	$	_usart_write_text:
;USART_b75.ppas,121 :: 		
;USART_b75.ppas,122 :: 		
$0432	$1303			BCF	STATUS, RP1
$0433	$1283			BCF	STATUS, RP0
$0434	$01B8			CLRF	_usart_write_text_local_i, 1
;USART_b75.ppas,123 :: 		
$0435	$0837			MOVF	FARG_Usart_Write_Text, 0
$0436	$0084			MOVWF	FSR
$0437	$0800			MOVF	INDF, 0
$0438	$00B9			MOVWF	_usart_write_text_local_data
;USART_b75.ppas,124 :: 		
$0439	$	USART_b75_L_47:
$0439	$0839			MOVF	_usart_write_text_local_data, 0
$043A	$3A00			XORLW	0
$043B	$1903			BTFSC	STATUS, Z
$043C	$2C47			GOTO	USART_b75_L_48
;USART_b75.ppas,126 :: 		
$043D	$0839			MOVF	_usart_write_text_local_data, 0
$043E	$00BC			MOVWF	FARG_USART_Write
$043F	$2496			CALL	_usart_write
;USART_b75.ppas,127 :: 		
$0440	$0AB8			INCF	_usart_write_text_local_i, 1
;USART_b75.ppas,128 :: 		
$0441	$0838			MOVF	_usart_write_text_local_i, 0
$0442	$0737			ADDWF	FARG_Usart_Write_Text, 0
$0443	$0084			MOVWF	FSR
$0444	$0800			MOVF	INDF, 0
$0445	$00B9			MOVWF	_usart_write_text_local_data
;USART_b75.ppas,129 :: 		
$0446	$2C39			GOTO	USART_b75_L_47
$0447	$	USART_b75_L_48:
$0447	$	USART_b75_L_45:
;USART_b75.ppas,130 :: 		
$0447	$0008			RETURN
$03AE	$	_adc_read:
;ADClib_A_B.ppas,12 :: 		
;ADClib_A_B.ppas,13 :: 		
$03AE	$3040			MOVLW	64
$03AF	$1303			BCF	STATUS, RP1
$03B0	$1283			BCF	STATUS, RP0
$03B1	$059F			ANDWF	ADCON0, 1
;ADClib_A_B.ppas,14 :: 		
$03B2	$30F0			MOVLW	240
$03B3	$1683			BSF	STATUS, RP0
$03B4	$049F			IORWF	ADCON1, 1
;ADClib_A_B.ppas,15 :: 		
$03B5	$1283			BCF	STATUS, RP0
$03B6	$179F			BSF	ADCON0, 7
;ADClib_A_B.ppas,16 :: 		
$03B7	$0837			MOVF	FARG_ADC_read, 0
$03B8	$00F0			MOVWF	STACK_0
$03B9	$0DF0			RLF	STACK_0, 1
$03BA	$1070			BCF	STACK_0, 0
$03BB	$0DF0			RLF	STACK_0, 1
$03BC	$1070			BCF	STACK_0, 0
$03BD	$0870			MOVF	STACK_0, 0
$03BE	$049F			IORWF	ADCON0, 1
;ADClib_A_B.ppas,17 :: 		
$03BF	$141F			BSF	ADCON0, 0
;ADClib_A_B.ppas,18 :: 		
$03C0	$24E9			CALL	_delay_22us
;ADClib_A_B.ppas,19 :: 		
$03C1	$149F			BSF	ADCON0, 1
;ADClib_A_B.ppas,20 :: 		
$03C2	$	ADClib_A_B_L_2:
$03C2	$081F			MOVF	ADCON0, 0
$03C3	$00F2			MOVWF	STACK_2
$03C4	$3000			MOVLW	0
$03C5	$18F2			BTFSC	STACK_2, 1
$03C6	$3001			MOVLW	1
$03C7	$00F2			MOVWF	STACK_2
$03C8	$0872			MOVF	STACK_2, 0
$03C9	$3A01			XORLW	1
$03CA	$1D03			BTFSS	STATUS, Z
$03CB	$2BCE			GOTO	ADClib_A_B_L_3
;ADClib_A_B.ppas,21 :: 		
$03CC	$0000			NOP
$03CD	$2BC2			GOTO	ADClib_A_B_L_2
$03CE	$	ADClib_A_B_L_3:
;ADClib_A_B.ppas,22 :: 		
$03CE	$081E			MOVF	ADRESH, 0
$03CF	$00F2			MOVWF	STACK_2
$03D0	$01F3			CLRF	STACK_2+1
$03D1	$0872			MOVF	STACK_2, 0
$03D2	$00F3			MOVWF	STACK_2+1
$03D3	$01F2			CLRF	STACK_2
$03D4	$0872			MOVF	STACK_2, 0
$03D5	$00B8			MOVWF	_adc_read_local_result
$03D6	$0873			MOVF	STACK_2+1, 0
$03D7	$00B9			MOVWF	_adc_read_local_result+1
;ADClib_A_B.ppas,23 :: 		
$03D8	$1683			BSF	STATUS, RP0
$03D9	$081E			MOVF	ADRESL, 0
$03DA	$0472			IORWF	STACK_2, 0
$03DB	$1283			BCF	STATUS, RP0
$03DC	$00B8			MOVWF	_adc_read_local_result
$03DD	$0873			MOVF	STACK_2+1, 0
$03DE	$00B9			MOVWF	_adc_read_local_result+1
$03DF	$3000			MOVLW	0
$03E0	$04B9			IORWF	_adc_read_local_result+1, 1
;ADClib_A_B.ppas,24 :: 		
$03E1	$101F			BCF	ADCON0, 0
$03E2	$	ADClib_A_B_L_0:
;ADClib_A_B.ppas,25 :: 		
$03E2	$0838			MOVF	_adc_read_local_result, 0
$03E3	$00F0			MOVWF	STACK_0
$03E4	$0839			MOVF	_adc_read_local_result+1, 0
$03E5	$00F1			MOVWF	STACK_0+1
$03E6	$0008			RETURN
$0166	$	_inttostr:
;conv.ppas,100 :: 		
;conv.ppas,101 :: 		
$0166	$1303			BCF	STATUS, RP1
$0167	$1283			BCF	STATUS, RP0
$0168	$0838			MOVF	FARG_IntToStr+1, 0
$0169	$3A80			XORLW	128
$016A	$1D03			BTFSS	STATUS, Z
$016B	$296E			GOTO	L_IntToStr_4
$016C	$3000			MOVLW	0
$016D	$0637			XORWF	FARG_IntToStr, 0
$016E	$	L_IntToStr_4:
$016E	$1D03			BTFSS	STATUS, Z
$016F	$2986			GOTO	conv_L_57
$0170	$	conv_L_56:
;conv.ppas,103 :: 		
$0170	$0839			MOVF	FARG_IntToStr+2, 0
$0171	$0084			MOVWF	FSR
$0172	$302D			MOVLW	45
$0173	$0080			MOVWF	INDF
$0174	$0A84			INCF	FSR, 1
$0175	$3033			MOVLW	51
$0176	$0080			MOVWF	INDF
$0177	$0A84			INCF	FSR, 1
$0178	$3032			MOVLW	50
$0179	$0080			MOVWF	INDF
$017A	$0A84			INCF	FSR, 1
$017B	$3037			MOVLW	55
$017C	$0080			MOVWF	INDF
$017D	$0A84			INCF	FSR, 1
$017E	$3036			MOVLW	54
$017F	$0080			MOVWF	INDF
$0180	$0A84			INCF	FSR, 1
$0181	$3038			MOVLW	56
$0182	$0080			MOVWF	INDF
$0183	$0A84			INCF	FSR, 1
$0184	$0180			CLRF	INDF
;conv.ppas,104 :: 		
$0185	$2A08			GOTO	conv_L_55
;conv.ppas,105 :: 		
$0186	$	conv_L_57:
$0186	$	conv_L_58:
;conv.ppas,106 :: 		
$0186	$01BB			CLRF	_inttostr_local_negative, 1
;conv.ppas,107 :: 		
$0187	$3080			MOVLW	128
$0188	$0638			XORWF	FARG_IntToStr+1, 0
$0189	$00F0			MOVWF	STACK_0
$018A	$3080			MOVLW	128
$018B	$0270			SUBWF	STACK_0, 0
$018C	$1D03			BTFSS	STATUS, Z
$018D	$2990			GOTO	L_IntToStr_5
$018E	$3000			MOVLW	0
$018F	$0237			SUBWF	FARG_IntToStr, 0
$0190	$	L_IntToStr_5:
$0190	$1803			BTFSC	STATUS, C
$0191	$299C			GOTO	conv_L_61
$0192	$	conv_L_60:
;conv.ppas,109 :: 		
$0192	$30FF			MOVLW	255
$0193	$00BB			MOVWF	_inttostr_local_negative
;conv.ppas,110 :: 		
$0194	$0837			MOVF	FARG_IntToStr, 0
$0195	$3C00			SUBLW	0
$0196	$00B7			MOVWF	FARG_IntToStr
$0197	$0838			MOVF	FARG_IntToStr+1, 0
$0198	$1C03			BTFSS	STATUS, C
$0199	$3F01			ADDLW	1
$019A	$01B8			CLRF	FARG_IntToStr+1
$019B	$02B8			SUBWF	FARG_IntToStr+1, 1
;conv.ppas,111 :: 		
$019C	$	conv_L_61:
$019C	$	conv_L_62:
;conv.ppas,112 :: 		
$019C	$3001			MOVLW	1
$019D	$00BA			MOVWF	_inttostr_local_len
;conv.ppas,113 :: 		
$019E	$3080			MOVLW	128
$019F	$00F0			MOVWF	STACK_0
$01A0	$3080			MOVLW	128
$01A1	$0638			XORWF	FARG_IntToStr+1, 0
$01A2	$0270			SUBWF	STACK_0, 0
$01A3	$1D03			BTFSS	STATUS, Z
$01A4	$29A7			GOTO	L_IntToStr_6
$01A5	$0837			MOVF	FARG_IntToStr, 0
$01A6	$3C09			SUBLW	9
$01A7	$	L_IntToStr_6:
$01A7	$1803			BTFSC	STATUS, C
$01A8	$29AA			GOTO	conv_L_64
$01A9	$	conv_L_63:
;conv.ppas,114 :: 		
$01A9	$0ABA			INCF	_inttostr_local_len, 1
$01AA	$	conv_L_64:
$01AA	$	conv_L_65:
;conv.ppas,115 :: 		
$01AA	$3080			MOVLW	128
$01AB	$00F0			MOVWF	STACK_0
$01AC	$3080			MOVLW	128
$01AD	$0638			XORWF	FARG_IntToStr+1, 0
$01AE	$0270			SUBWF	STACK_0, 0
$01AF	$1D03			BTFSS	STATUS, Z
$01B0	$29B3			GOTO	L_IntToStr_7
$01B1	$0837			MOVF	FARG_IntToStr, 0
$01B2	$3C63			SUBLW	99
$01B3	$	L_IntToStr_7:
$01B3	$1803			BTFSC	STATUS, C
$01B4	$29B6			GOTO	conv_L_67
$01B5	$	conv_L_66:
;conv.ppas,116 :: 		
$01B5	$0ABA			INCF	_inttostr_local_len, 1
$01B6	$	conv_L_67:
$01B6	$	conv_L_68:
;conv.ppas,117 :: 		
$01B6	$3080			MOVLW	128
$01B7	$3A03			XORLW	3
$01B8	$00F0			MOVWF	STACK_0
$01B9	$3080			MOVLW	128
$01BA	$0638			XORWF	FARG_IntToStr+1, 0
$01BB	$0270			SUBWF	STACK_0, 0
$01BC	$1D03			BTFSS	STATUS, Z
$01BD	$29C0			GOTO	L_IntToStr_8
$01BE	$0837			MOVF	FARG_IntToStr, 0
$01BF	$3CE7			SUBLW	231
$01C0	$	L_IntToStr_8:
$01C0	$1803			BTFSC	STATUS, C
$01C1	$29C3			GOTO	conv_L_70
$01C2	$	conv_L_69:
;conv.ppas,118 :: 		
$01C2	$0ABA			INCF	_inttostr_local_len, 1
$01C3	$	conv_L_70:
$01C3	$	conv_L_71:
;conv.ppas,119 :: 		
$01C3	$3080			MOVLW	128
$01C4	$3A27			XORLW	39
$01C5	$00F0			MOVWF	STACK_0
$01C6	$3080			MOVLW	128
$01C7	$0638			XORWF	FARG_IntToStr+1, 0
$01C8	$0270			SUBWF	STACK_0, 0
$01C9	$1D03			BTFSS	STATUS, Z
$01CA	$29CD			GOTO	L_IntToStr_9
$01CB	$0837			MOVF	FARG_IntToStr, 0
$01CC	$3C0F			SUBLW	15
$01CD	$	L_IntToStr_9:
$01CD	$1803			BTFSC	STATUS, C
$01CE	$29D0			GOTO	conv_L_73
$01CF	$	conv_L_72:
;conv.ppas,120 :: 		
$01CF	$0ABA			INCF	_inttostr_local_len, 1
$01D0	$	conv_L_73:
$01D0	$	conv_L_74:
;conv.ppas,121 :: 		
$01D0	$0839			MOVF	FARG_IntToStr+2, 0
$01D1	$0084			MOVWF	FSR
$01D2	$3020			MOVLW	32
$01D3	$0080			MOVWF	INDF
$01D4	$0A84			INCF	FSR, 1
$01D5	$0080			MOVWF	INDF
$01D6	$0A84			INCF	FSR, 1
$01D7	$0080			MOVWF	INDF
$01D8	$0A84			INCF	FSR, 1
$01D9	$0080			MOVWF	INDF
$01DA	$0A84			INCF	FSR, 1
$01DB	$0080			MOVWF	INDF
$01DC	$0A84			INCF	FSR, 1
$01DD	$0080			MOVWF	INDF
$01DE	$0A84			INCF	FSR, 1
$01DF	$0180			CLRF	INDF
;conv.ppas,122 :: 		
$01E0	$0384			DECF	FSR, 1
;conv.ppas,123 :: 		
$01E1	$	conv_L_77:
$01E1	$083A			MOVF	_inttostr_local_len, 0
$01E2	$3C00			SUBLW	0
$01E3	$1803			BTFSC	STATUS, C
$01E4	$2A03			GOTO	conv_L_78
;conv.ppas,125 :: 		
$01E5	$300A			MOVLW	10
$01E6	$00F4			MOVWF	STACK_4
$01E7	$01F5			CLRF	STACK_4+1
$01E8	$0837			MOVF	FARG_IntToStr, 0
$01E9	$00F0			MOVWF	STACK_0
$01EA	$0838			MOVF	FARG_IntToStr+1, 0
$01EB	$00F1			MOVWF	STACK_0+1
$01EC	$2323			CALL	_div_16x16_s
$01ED	$0878			MOVF	STACK_8, 0
$01EE	$00F0			MOVWF	STACK_0
$01EF	$0879			MOVF	STACK_9, 0
$01F0	$00F1			MOVWF	STACK_1
$01F1	$3030			MOVLW	48
$01F2	$0770			ADDWF	STACK_0, 0
$01F3	$0080			MOVWF	INDF
;conv.ppas,126 :: 		
;conv.ppas,127 :: 		
$01F4	$0384			DECF	FSR, 1
;conv.ppas,128 :: 		
$01F5	$300A			MOVLW	10
$01F6	$00F4			MOVWF	STACK_4
$01F7	$01F5			CLRF	STACK_4+1
$01F8	$0837			MOVF	FARG_IntToStr, 0
$01F9	$00F0			MOVWF	STACK_0
$01FA	$0838			MOVF	FARG_IntToStr+1, 0
$01FB	$00F1			MOVWF	STACK_0+1
$01FC	$2323			CALL	_div_16x16_s
$01FD	$0870			MOVF	STACK_0, 0
$01FE	$00B7			MOVWF	FARG_IntToStr
$01FF	$0871			MOVF	STACK_0+1, 0
$0200	$00B8			MOVWF	FARG_IntToStr+1
;conv.ppas,129 :: 		
$0201	$03BA			DECF	_inttostr_local_len, 1
;conv.ppas,130 :: 		
$0202	$29E1			GOTO	conv_L_77
$0203	$	conv_L_78:
;conv.ppas,131 :: 		
$0203	$083B			MOVF	_inttostr_local_negative, 0
$0204	$1903			BTFSC	STATUS, Z
$0205	$2A08			GOTO	conv_L_82
$0206	$	conv_L_81:
;conv.ppas,133 :: 		
$0206	$302D			MOVLW	45
$0207	$0080			MOVWF	INDF
;conv.ppas,134 :: 		
$0208	$	conv_L_82:
$0208	$	conv_L_83:
$0208	$	conv_L_55:
;conv.ppas,135 :: 		
$0208	$0008			RETURN
$045E	$	_usart_init:
;USART_b75.ppas,22 :: 		
;USART_b75.ppas,24 :: 		
$045E	$	USART_b75_L_1:
$045E	$1303			BCF	STATUS, RP1
$045F	$1683			BSF	STATUS, RP0
$0460	$1698			BSF	TXSTA, 5
$0461	$	USART_b75_L_2:
;USART_b75.ppas,25 :: 		
$0461	$3090			MOVLW	144
$0462	$1283			BCF	STATUS, RP0
$0463	$0098			MOVWF	RCSTA
;USART_b75.ppas,31 :: 		
$0464	$	USART_b75_L_3:
$0464	$1683			BSF	STATUS, RP0
$0465	$1686			BSF	TRISB, 5
$0466	$	USART_b75_L_4:
;USART_b75.ppas,32 :: 		
$0466	$	USART_b75_L_5:
$0466	$1786			BSF	TRISB, 7
$0467	$	USART_b75_L_6:
;USART_b75.ppas,35 :: 		
$0467	$	USART_b75_L_8:
$0467	$1283			BCF	STATUS, RP0
$0468	$080C			MOVF	PIR1, 0
$0469	$00F1			MOVWF	STACK_1
$046A	$3000			MOVLW	0
$046B	$1AF1			BTFSC	STACK_1, 5
$046C	$3001			MOVLW	1
$046D	$00F1			MOVWF	STACK_1
$046E	$0871			MOVF	STACK_1, 0
$046F	$3A01			XORLW	1
$0470	$1903			BTFSC	STATUS, Z
$0471	$2C67			GOTO	USART_b75_L_8
;USART_b75.ppas,36 :: 		
$0472	$	USART_b75_L_9:
$0472	$	USART_b75_L_0:
;USART_b75.ppas,37 :: 		
$0472	$0008			RETURN
$0473	$	_byte2double:
$0473	$1303			BCF	STATUS, RP1
$0474	$1283			BCF	STATUS, RP0
;math_double.ppas,1649 :: 		
;math_double.ppas,1656 :: 		
$0475	$	FLO08U32:
;math_double.ppas,1657 :: 		
$0475	$0870			MOVF	STACK_0, W
;math_double.ppas,1659 :: 		
$0476	$00F8			MOVWF	STACK_8
;math_double.ppas,1660 :: 		
$0477	$01FB			CLRF	STACK_11
;math_double.ppas,1662 :: 		
$0478	$01FC			CLRF	STACK_12
;math_double.ppas,1663 :: 		
$0479	$309E			MOVLW	0X9E
;math_double.ppas,1664 :: 		
$047A	$00F3			MOVWF	STACK_3
;math_double.ppas,1665 :: 		
$047B	$01FA			CLRF	STACK_10
;math_double.ppas,1666 :: 		
$047C	$01F2			CLRF	STACK_2
;math_double.ppas,1667 :: 		
$047D	$01F1			CLRF	STACK_1
;math_double.ppas,1668 :: 		
$047E	$01F0			CLRF	STACK_0
;math_double.ppas,1669 :: 		
$047F	$3002			MOVLW	0X02
;math_double.ppas,1670 :: 		
$0480	$00FC			MOVWF	STACK_12
;math_double.ppas,1672 :: 		
$0481	$226A			CALL	_nrm4032
$0482	$	math_double_L_17:
;math_double.ppas,1673 :: 		
$0482	$0008			RETURN
$0414	$	_int2double:
$0414	$1303			BCF	STATUS, RP1
$0415	$1283			BCF	STATUS, RP0
;math_double.ppas,1681 :: 		
;math_double.ppas,1687 :: 		
$0416	$0870			MOVF	STACK_0, W
;math_double.ppas,1688 :: 		
$0417	$00F8			MOVWF	STACK_8
;math_double.ppas,1689 :: 		
$0418	$0871			MOVF	STACK_1, W
;math_double.ppas,1690 :: 		
$0419	$00F0			MOVWF	STACK_0
;math_double.ppas,1691 :: 		
$041A	$01F1			CLRF	STACK_1
;math_double.ppas,1692 :: 		
$041B	$01F2			CLRF	STACK_2
;math_double.ppas,1694 :: 		
$041C	$01F3			CLRF	STACK_3
;math_double.ppas,1695 :: 		
$041D	$	FLO1632:
;math_double.ppas,1696 :: 		
$041D	$01FB			CLRF	STACK_11
;math_double.ppas,1698 :: 		
$041E	$01FC			CLRF	STACK_12
;math_double.ppas,1699 :: 		
$041F	$3096			MOVLW	150
;math_double.ppas,1700 :: 		
$0420	$00F3			MOVWF	STACK_3
;math_double.ppas,1701 :: 		
$0421	$01FA			CLRF	STACK_10
;math_double.ppas,1702 :: 		
$0422	$1FF0			BTFSS	STACK_0, 7
;math_double.ppas,1704 :: 		
$0423	$2C2A			GOTO	FLO1632EEE
;math_double.ppas,1705 :: 		
$0424	$09F8			COMF	STACK_8, F
;math_double.ppas,1707 :: 		
$0425	$09F0			COMF	STACK_0, F
;math_double.ppas,1708 :: 		
$0426	$0AF8			INCF	STACK_8, F
;math_double.ppas,1709 :: 		
$0427	$1903			BTFSC	STATUS, Z
;math_double.ppas,1711 :: 		
$0428	$0AF0			INCF	STACK_0, F
;math_double.ppas,1712 :: 		
$0429	$17FA			BSF	STACK_10, 7
;math_double.ppas,1713 :: 		
$042A	$	FLO1632EEE:
;math_double.ppas,1714 :: 		
$042A	$0870			MOVF	STACK_0, W
;math_double.ppas,1715 :: 		
$042B	$00F1			MOVWF	STACK_1
;math_double.ppas,1716 :: 		
$042C	$0878			MOVF	STACK_8, W
;math_double.ppas,1717 :: 		
$042D	$00F0			MOVWF	STACK_0
;math_double.ppas,1718 :: 		
$042E	$01F8			CLRF	STACK_8
;math_double.ppas,1719 :: 		
$042F	$01F2			CLRF	STACK_2
;math_double.ppas,1721 :: 		
$0430	$237D			CALL	_nrm3232
$0431	$	math_double_L_18:
;math_double.ppas,1722 :: 		
$0431	$0008			RETURN
$0209	$	_mul_32x32_fp:
$0209	$1303			BCF	STATUS, RP1
$020A	$1283			BCF	STATUS, RP0
;math_double.ppas,527 :: 		
;math_double.ppas,541 :: 		
$020B	$	FPM32:
;math_double.ppas,542 :: 		
$020B	$01FB			CLRF	STACK_11
;math_double.ppas,543 :: 		
$020C	$0873			MOVF	STACK_3, W
;math_double.ppas,544 :: 		
$020D	$1D03			BTFSS	STATUS, Z
;math_double.ppas,545 :: 		
$020E	$0877			MOVF	STACK_7, W
;math_double.ppas,546 :: 		
$020F	$1903			BTFSC	STATUS, Z
;math_double.ppas,547 :: 		
$0210	$2A60			GOTO	JPMRES032
;math_double.ppas,548 :: 		
$0211	$	M32BNE0:
;math_double.ppas,549 :: 		
$0211	$0872			MOVF	STACK_2, W
;math_double.ppas,550 :: 		
$0212	$0676			XORWF	STACK_6, W
;math_double.ppas,551 :: 		
$0213	$00FA			MOVWF	STACK_10
;math_double.ppas,552 :: 		
$0214	$0877			MOVF	STACK_7, W
;math_double.ppas,553 :: 		
$0215	$07F3			ADDWF	STACK_3, F
;math_double.ppas,554 :: 		
$0216	$307E			MOVLW	126
;math_double.ppas,555 :: 		
$0217	$1C03			BTFSS	STATUS, C
;math_double.ppas,556 :: 		
$0218	$2A1D			GOTO	MTUN32
;math_double.ppas,557 :: 		
$0219	$02F3			SUBWF	STACK_3, F
;math_double.ppas,558 :: 		
$021A	$1803			BTFSC	STATUS, C
;math_double.ppas,559 :: 		
$021B	$2A63			GOTO	JPMSETFOV32
;math_double.ppas,560 :: 		
$021C	$2A20			GOTO	MOK32
;math_double.ppas,561 :: 		
$021D	$	MTUN32:
;math_double.ppas,562 :: 		
$021D	$02F3			SUBWF	STACK_3, F
;math_double.ppas,563 :: 		
$021E	$1C03			BTFSS	STATUS, C
;math_double.ppas,564 :: 		
$021F	$2A66			GOTO	JPMSETFUN32
;math_double.ppas,565 :: 		
$0220	$	MOK32:
;math_double.ppas,566 :: 		
$0220	$0872			MOVF	STACK_2, W
;math_double.ppas,567 :: 		
$0221	$00F8			MOVWF	STACK_8
;math_double.ppas,568 :: 		
$0222	$0871			MOVF	STACK_1, W
;math_double.ppas,569 :: 		
$0223	$00FC			MOVWF	STACK_12
;math_double.ppas,570 :: 		
$0224	$0870			MOVF	STACK_0, W
;math_double.ppas,571 :: 		
$0225	$00FD			MOVWF	STACK_13
;math_double.ppas,572 :: 		
$0226	$17F8			BSF	STACK_8, 7
;math_double.ppas,573 :: 		
$0227	$17F6			BSF	STACK_6, 7
;math_double.ppas,574 :: 		
$0228	$1003			BCF	STATUS, C
;math_double.ppas,575 :: 		
$0229	$01F2			CLRF	STACK_2
;math_double.ppas,576 :: 		
$022A	$01F1			CLRF	STACK_1
;math_double.ppas,577 :: 		
$022B	$01F0			CLRF	STACK_0
;math_double.ppas,578 :: 		
$022C	$3018			MOVLW	24
;math_double.ppas,579 :: 		
$022D	$00A0			MOVWF	MATH_DOUBLE___MATH_TEMPBD
;math_double.ppas,580 :: 		
$022E	$	MLOOP32:
;math_double.ppas,581 :: 		
$022E	$1C7D			BTFSS	STACK_13, 0
;math_double.ppas,582 :: 		
$022F	$2A3A			GOTO	MNOADD32
;math_double.ppas,583 :: 		
$0230	$	MADD32:
;math_double.ppas,584 :: 		
$0230	$0874			MOVF	STACK_4, W
;math_double.ppas,585 :: 		
$0231	$07F0			ADDWF	STACK_0, F
;math_double.ppas,586 :: 		
$0232	$0875			MOVF	STACK_5, W
;math_double.ppas,587 :: 		
$0233	$1803			BTFSC	STATUS, C
;math_double.ppas,588 :: 		
$0234	$0F75			INCFSZ	STACK_5, W
;math_double.ppas,589 :: 		
$0235	$07F1			ADDWF	STACK_1, F
;math_double.ppas,590 :: 		
$0236	$0876			MOVF	STACK_6, W
;math_double.ppas,591 :: 		
$0237	$1803			BTFSC	STATUS, C
;math_double.ppas,592 :: 		
$0238	$0F76			INCFSZ	STACK_6, W
;math_double.ppas,593 :: 		
$0239	$07F2			ADDWF	STACK_2, F
;math_double.ppas,594 :: 		
$023A	$	MNOADD32:
;math_double.ppas,595 :: 		
$023A	$0CF2			RRF	STACK_2, F
;math_double.ppas,596 :: 		
$023B	$0CF1			RRF	STACK_1, F
;math_double.ppas,597 :: 		
$023C	$0CF0			RRF	STACK_0, F
;math_double.ppas,598 :: 		
$023D	$0CF8			RRF	STACK_8, F
;math_double.ppas,599 :: 		
$023E	$0CFC			RRF	STACK_12, F
;math_double.ppas,600 :: 		
$023F	$0CFD			RRF	STACK_13, F
;math_double.ppas,601 :: 		
$0240	$1003			BCF	STATUS, C
;math_double.ppas,602 :: 		
$0241	$0BA0			DECFSZ	MATH_DOUBLE___MATH_TEMPBD, F
;math_double.ppas,603 :: 		
$0242	$2A2E			GOTO	MLOOP32
;math_double.ppas,604 :: 		
$0243	$1BF2			BTFSC	STACK_2, 7
;math_double.ppas,605 :: 		
$0244	$2A4A			GOTO	MROUND32
;math_double.ppas,606 :: 		
$0245	$0DF8			RLF	STACK_8, F
;math_double.ppas,607 :: 		
$0246	$0DF0			RLF	STACK_0, F
;math_double.ppas,608 :: 		
$0247	$0DF1			RLF	STACK_1, F
;math_double.ppas,609 :: 		
$0248	$0DF2			RLF	STACK_2, F
;math_double.ppas,610 :: 		
$0249	$03F3			DECF	STACK_3, F
;math_double.ppas,611 :: 		
$024A	$	MROUND32:
;math_double.ppas,612 :: 		
$024A	$1B7B			BTFSC	STACK_11, 6
;math_double.ppas,613 :: 		
$024B	$1C70			BTFSS	STACK_0, 0
;math_double.ppas,614 :: 		
$024C	$2A5C			GOTO	MUL32OK
;math_double.ppas,615 :: 		
$024D	$1FF8			BTFSS	STACK_8, 7
;math_double.ppas,616 :: 		
$024E	$2A5C			GOTO	MUL32OK
;math_double.ppas,617 :: 		
$024F	$0AF0			INCF	STACK_0, F
;math_double.ppas,618 :: 		
$0250	$1903			BTFSC	STATUS, Z
;math_double.ppas,619 :: 		
$0251	$0AF1			INCF	STACK_1, F
;math_double.ppas,620 :: 		
$0252	$1903			BTFSC	STATUS, Z
;math_double.ppas,621 :: 		
$0253	$0AF2			INCF	STACK_2, F
;math_double.ppas,622 :: 		
$0254	$1D03			BTFSS	STATUS, Z
;math_double.ppas,623 :: 		
$0255	$2A5C			GOTO	MUL32OK
;math_double.ppas,624 :: 		
$0256	$0CF2			RRF	STACK_2, F
;math_double.ppas,625 :: 		
$0257	$0CF1			RRF	STACK_1, F
;math_double.ppas,626 :: 		
$0258	$0CF0			RRF	STACK_0, F
;math_double.ppas,627 :: 		
$0259	$0AF3			INCF	STACK_3, F
;math_double.ppas,628 :: 		
$025A	$1903			BTFSC	STATUS, Z
;math_double.ppas,629 :: 		
$025B	$2A63			GOTO	JPMSETFOV32
;math_double.ppas,630 :: 		
$025C	$	MUL32OK:
;math_double.ppas,631 :: 		
$025C	$1FFA			BTFSS	STACK_10, 7
;math_double.ppas,632 :: 		
$025D	$13F2			BCF	STACK_2, 7
;math_double.ppas,634 :: 		
$025E	$3000			MOVLW	0X00
;math_double.ppas,635 :: 		
$025F	$2A68			GOTO	MUL32EEE
;math_double.ppas,636 :: 		
$0260	$	JPMRES032:
;math_double.ppas,638 :: 		
$0260	$3001			MOVLW	0X01
;math_double.ppas,640 :: 		
$0261	$24E0			CALL	_res032
;math_double.ppas,642 :: 		
$0262	$2A68			GOTO	MUL32EEE
;math_double.ppas,643 :: 		
$0263	$	JPMSETFOV32:
;math_double.ppas,645 :: 		
$0263	$3002			MOVLW	0X02
;math_double.ppas,647 :: 		
$0264	$24B7			CALL	_setfov32
;math_double.ppas,649 :: 		
$0265	$2A68			GOTO	MUL32EEE
;math_double.ppas,650 :: 		
$0266	$	JPMSETFUN32:
;math_double.ppas,652 :: 		
$0266	$3004			MOVLW	0X04
;math_double.ppas,654 :: 		
$0267	$24C5			CALL	_setfun32
;math_double.ppas,656 :: 		
$0268	$	MUL32EEE:
;math_double.ppas,657 :: 		
$0268	$0000			NOP
;math_double.ppas,658 :: 		
$0269	$	math_double_L_9:
;math_double.ppas,659 :: 		
$0269	$0008			RETURN
$0448	$	_word2double:
$0448	$1303			BCF	STATUS, RP1
$0449	$1283			BCF	STATUS, RP0
;math_double.ppas,1729 :: 		
;math_double.ppas,1735 :: 		
$044A	$0870			MOVF	STACK_0, W
;math_double.ppas,1736 :: 		
$044B	$00F8			MOVWF	STACK_8
;math_double.ppas,1737 :: 		
$044C	$0871			MOVF	STACK_1, W
;math_double.ppas,1738 :: 		
$044D	$00F0			MOVWF	STACK_0
;math_double.ppas,1739 :: 		
$044E	$01F1			CLRF	STACK_1
;math_double.ppas,1740 :: 		
$044F	$01F2			CLRF	STACK_2
;math_double.ppas,1742 :: 		
$0450	$01F3			CLRF	STACK_3
;math_double.ppas,1743 :: 		
$0451	$	FLO16U32:
;math_double.ppas,1744 :: 		
$0451	$01FB			CLRF	STACK_11
;math_double.ppas,1746 :: 		
$0452	$01FC			CLRF	STACK_12
;math_double.ppas,1747 :: 		
$0453	$3096			MOVLW	150
;math_double.ppas,1748 :: 		
$0454	$00F3			MOVWF	STACK_3
;math_double.ppas,1750 :: 		
$0455	$01FA			CLRF	STACK_10
;math_double.ppas,1751 :: 		
$0456	$0870			MOVF	STACK_0, W
;math_double.ppas,1752 :: 		
$0457	$00F1			MOVWF	STACK_1
;math_double.ppas,1753 :: 		
$0458	$0878			MOVF	STACK_8, W
;math_double.ppas,1754 :: 		
$0459	$00F0			MOVWF	STACK_0
;math_double.ppas,1755 :: 		
$045A	$01F8			CLRF	STACK_8
;math_double.ppas,1756 :: 		
$045B	$01F2			CLRF	STACK_2
;math_double.ppas,1758 :: 		
$045C	$237D			CALL	_nrm3232
$045D	$	math_double_L_19:
;math_double.ppas,1759 :: 		
$045D	$0008			RETURN
$00CA	$	_div_32x32_fp:
$00CA	$1303			BCF	STATUS, RP1
$00CB	$1283			BCF	STATUS, RP0
;math_double.ppas,671 :: 		
;math_double.ppas,685 :: 		
$00CC	$	FPD32:
;math_double.ppas,686 :: 		
$00CC	$0877			MOVF	STACK_7, W
;math_double.ppas,687 :: 		
$00CD	$1903			BTFSC	STATUS, Z
;math_double.ppas,689 :: 		
$00CE	$2959			GOTO	JPDSETFDZ32
;math_double.ppas,690 :: 		
$00CF	$0873			MOVF	STACK_3, W
;math_double.ppas,691 :: 		
$00D0	$1903			BTFSC	STATUS, Z
;math_double.ppas,692 :: 		
$00D1	$295C			GOTO	JPDRES032
;math_double.ppas,693 :: 		
$00D2	$	D32BNE0:
;math_double.ppas,694 :: 		
$00D2	$0872			MOVF	STACK_2, W
;math_double.ppas,695 :: 		
$00D3	$0676			XORWF	STACK_6, W
;math_double.ppas,696 :: 		
$00D4	$3980			ANDLW	128
;math_double.ppas,697 :: 		
$00D5	$00FA			MOVWF	STACK_10
;math_double.ppas,698 :: 		
$00D6	$17F2			BSF	STACK_2, 7
;math_double.ppas,699 :: 		
$00D7	$17F6			BSF	STACK_6, 7
;math_double.ppas,700 :: 		
$00D8	$	TALIGN32:
;math_double.ppas,701 :: 		
$00D8	$01A0			CLRF	MATH_DOUBLE___MATH_TEMPBD
;math_double.ppas,702 :: 		
$00D9	$0872			MOVF	STACK_2, W
;math_double.ppas,703 :: 		
$00DA	$00F8			MOVWF	STACK_8
;math_double.ppas,704 :: 		
$00DB	$0871			MOVF	STACK_1, W
;math_double.ppas,705 :: 		
$00DC	$00FC			MOVWF	STACK_12
;math_double.ppas,706 :: 		
$00DD	$0870			MOVF	STACK_0, W
;math_double.ppas,708 :: 		
$00DE	$00FD			MOVWF	STACK_13
;math_double.ppas,709 :: 		
$00DF	$0874			MOVF	STACK_4, W
;math_double.ppas,710 :: 		
$00E0	$02FD			SUBWF	STACK_13, F
;math_double.ppas,711 :: 		
$00E1	$0875			MOVF	STACK_5, W
;math_double.ppas,712 :: 		
$00E2	$1C03			BTFSS	STATUS, C
;math_double.ppas,713 :: 		
$00E3	$0F75			INCFSZ	STACK_5, W
;math_double.ppas,714 :: 		
$00E4	$	TS1ALIGN32:
;math_double.ppas,715 :: 		
$00E4	$02FC			SUBWF	STACK_12, F
;math_double.ppas,716 :: 		
$00E5	$0876			MOVF	STACK_6, W
;math_double.ppas,717 :: 		
$00E6	$1C03			BTFSS	STATUS, C
;math_double.ppas,718 :: 		
$00E7	$0F76			INCFSZ	STACK_6, W
;math_double.ppas,719 :: 		
$00E8	$	TS2ALIGN32:
;math_double.ppas,720 :: 		
$00E8	$02F8			SUBWF	STACK_8, F
;math_double.ppas,721 :: 		
$00E9	$01F8			CLRF	STACK_8
;math_double.ppas,722 :: 		
$00EA	$01FC			CLRF	STACK_12
;math_double.ppas,723 :: 		
$00EB	$01FD			CLRF	STACK_13
;math_double.ppas,724 :: 		
$00EC	$1C03			BTFSS	STATUS, C
;math_double.ppas,726 :: 		
$00ED	$28F5			GOTO	DALIGN32OK
;math_double.ppas,727 :: 		
$00EE	$1003			BCF	STATUS, C
;math_double.ppas,728 :: 		
$00EF	$0CF2			RRF	STACK_2, F
;math_double.ppas,729 :: 		
$00F0	$0CF1			RRF	STACK_1, F
;math_double.ppas,730 :: 		
$00F1	$0CF0			RRF	STACK_0, F
;math_double.ppas,731 :: 		
$00F2	$0CF8			RRF	STACK_8, F
;math_double.ppas,732 :: 		
$00F3	$3001			MOVLW	0X01
;math_double.ppas,733 :: 		
$00F4	$00A0			MOVWF	MATH_DOUBLE___MATH_TEMPBD
;math_double.ppas,734 :: 		
$00F5	$	DALIGN32OK:
;math_double.ppas,735 :: 		
$00F5	$0877			MOVF	STACK_7, W
;math_double.ppas,736 :: 		
$00F6	$02F3			SUBWF	STACK_3, F
;math_double.ppas,737 :: 		
$00F7	$1C03			BTFSS	STATUS, C
;math_double.ppas,738 :: 		
$00F8	$28FF			GOTO	ALTB32
;math_double.ppas,739 :: 		
$00F9	$	AGEB32:
;math_double.ppas,740 :: 		
$00F9	$307E			MOVLW	126
;math_double.ppas,741 :: 		
$00FA	$0720			ADDWF	MATH_DOUBLE___MATH_TEMPBD, W
;math_double.ppas,742 :: 		
$00FB	$07F3			ADDWF	STACK_3, F
;math_double.ppas,743 :: 		
$00FC	$1803			BTFSC	STATUS, C
;math_double.ppas,744 :: 		
$00FD	$295F			GOTO	JPDSETFOV32
;math_double.ppas,745 :: 		
$00FE	$2904			GOTO	DARGOK32
;math_double.ppas,746 :: 		
$00FF	$	ALTB32:
;math_double.ppas,747 :: 		
$00FF	$307E			MOVLW	126
;math_double.ppas,748 :: 		
$0100	$0720			ADDWF	MATH_DOUBLE___MATH_TEMPBD, W
;math_double.ppas,749 :: 		
$0101	$07F3			ADDWF	STACK_3, F
;math_double.ppas,750 :: 		
$0102	$1C03			BTFSS	STATUS, C
;math_double.ppas,751 :: 		
$0103	$2962			GOTO	JPDSETFUN32
;math_double.ppas,752 :: 		
$0104	$	DARGOK32:
;math_double.ppas,754 :: 		
$0104	$3018			MOVLW	24
;math_double.ppas,755 :: 		
$0105	$07FA			ADDWF	STACK_10, F
;math_double.ppas,756 :: 		
$0106	$	DLOOP32:
;math_double.ppas,757 :: 		
$0106	$0DFD			RLF	STACK_13, F
;math_double.ppas,758 :: 		
$0107	$0DFC			RLF	STACK_12, F
;math_double.ppas,759 :: 		
$0108	$0DF8			RLF	STACK_8, F
;math_double.ppas,760 :: 		
$0109	$0DF0			RLF	STACK_0, F
;math_double.ppas,761 :: 		
$010A	$0DF1			RLF	STACK_1, F
;math_double.ppas,762 :: 		
$010B	$0DF2			RLF	STACK_2, F
;math_double.ppas,764 :: 		
$010C	$0DA0			RLF	MATH_DOUBLE___MATH_TEMPBD, F
;math_double.ppas,765 :: 		
$010D	$0874			MOVF	STACK_4, W
;math_double.ppas,766 :: 		
$010E	$02F0			SUBWF	STACK_0, F
;math_double.ppas,767 :: 		
$010F	$0875			MOVF	STACK_5, W
;math_double.ppas,768 :: 		
$0110	$1C03			BTFSS	STATUS, C
;math_double.ppas,769 :: 		
$0111	$0F75			INCFSZ	STACK_5, W
;math_double.ppas,770 :: 		
$0112	$	DS132:
;math_double.ppas,771 :: 		
$0112	$02F1			SUBWF	STACK_1, F
;math_double.ppas,772 :: 		
$0113	$0876			MOVF	STACK_6, W
;math_double.ppas,773 :: 		
$0114	$1C03			BTFSS	STATUS, C
;math_double.ppas,774 :: 		
$0115	$0F76			INCFSZ	STACK_6, W
;math_double.ppas,775 :: 		
$0116	$	DS232:
;math_double.ppas,776 :: 		
$0116	$02F2			SUBWF	STACK_2, F
;math_double.ppas,777 :: 		
$0117	$0D76			RLF	STACK_6, W
;math_double.ppas,778 :: 		
$0118	$04A0			IORWF	MATH_DOUBLE___MATH_TEMPBD, F
;math_double.ppas,779 :: 		
$0119	$1C20			BTFSS	MATH_DOUBLE___MATH_TEMPBD, 0
;math_double.ppas,780 :: 		
$011A	$291D			GOTO	DREST32
;math_double.ppas,781 :: 		
$011B	$147D			BSF	STACK_13, 0
;math_double.ppas,782 :: 		
$011C	$2928			GOTO	DOK32
;math_double.ppas,783 :: 		
$011D	$	DREST32:
;math_double.ppas,784 :: 		
$011D	$0874			MOVF	STACK_4, W
;math_double.ppas,785 :: 		
$011E	$07F0			ADDWF	STACK_0, F
;math_double.ppas,786 :: 		
$011F	$0875			MOVF	STACK_5, W
;math_double.ppas,787 :: 		
$0120	$1803			BTFSC	STATUS, C
;math_double.ppas,788 :: 		
$0121	$0F75			INCFSZ	STACK_5, W
;math_double.ppas,789 :: 		
$0122	$	DAREST32:
;math_double.ppas,790 :: 		
$0122	$07F1			ADDWF	STACK_1, F
;math_double.ppas,791 :: 		
$0123	$0876			MOVF	STACK_6, W
;math_double.ppas,792 :: 		
$0124	$1803			BTFSC	STATUS, C
;math_double.ppas,793 :: 		
$0125	$0A76			INCF	STACK_6, W
;math_double.ppas,794 :: 		
$0126	$07F2			ADDWF	STACK_2, F
;math_double.ppas,795 :: 		
$0127	$107D			BCF	STACK_13, 0
;math_double.ppas,797 :: 		
$0128	$	DOK32:
;math_double.ppas,798 :: 		
$0128	$03FA			DECF	STACK_10, F
;math_double.ppas,799 :: 		
$0129	$301F			MOVLW	31
;math_double.ppas,800 :: 		
$012A	$057A			ANDWF	STACK_10, W
;math_double.ppas,801 :: 		
$012B	$1D03			BTFSS	STATUS, Z
;math_double.ppas,802 :: 		
$012C	$2906			GOTO	DLOOP32
;math_double.ppas,803 :: 		
$012D	$	DROUND32:
;math_double.ppas,804 :: 		
$012D	$1B7B			BTFSC	STACK_11, 6
;math_double.ppas,805 :: 		
$012E	$1C7D			BTFSS	STACK_13, 0
;math_double.ppas,806 :: 		
$012F	$294F			GOTO	DIV32OK
;math_double.ppas,807 :: 		
$0130	$1003			BCF	STATUS, C
;math_double.ppas,808 :: 		
$0131	$0DF0			RLF	STACK_0, F
;math_double.ppas,809 :: 		
$0132	$0DF1			RLF	STACK_1, F
;math_double.ppas,810 :: 		
$0133	$0DF2			RLF	STACK_2, F
;math_double.ppas,812 :: 		
$0134	$0DA0			RLF	MATH_DOUBLE___MATH_TEMPBD, F
;math_double.ppas,813 :: 		
$0135	$0874			MOVF	STACK_4, W
;math_double.ppas,814 :: 		
$0136	$02F0			SUBWF	STACK_0, F
;math_double.ppas,815 :: 		
$0137	$0875			MOVF	STACK_5, W
;math_double.ppas,816 :: 		
$0138	$1C03			BTFSS	STATUS, C
;math_double.ppas,817 :: 		
$0139	$0F75			INCFSZ	STACK_5, W
;math_double.ppas,818 :: 		
$013A	$02F1			SUBWF	STACK_1, F
;math_double.ppas,819 :: 		
$013B	$0876			MOVF	STACK_6, W
;math_double.ppas,820 :: 		
$013C	$1C03			BTFSS	STATUS, C
;math_double.ppas,821 :: 		
$013D	$0F76			INCFSZ	STACK_6, W
;math_double.ppas,822 :: 		
$013E	$02F2			SUBWF	STACK_2, F
;math_double.ppas,823 :: 		
$013F	$0D76			RLF	STACK_6, W
;math_double.ppas,824 :: 		
$0140	$0420			IORWF	MATH_DOUBLE___MATH_TEMPBD, W
;math_double.ppas,825 :: 		
$0141	$3901			ANDLW	0X01
;math_double.ppas,826 :: 		
$0142	$07FD			ADDWF	STACK_13, F
;math_double.ppas,827 :: 		
$0143	$1803			BTFSC	STATUS, C
;math_double.ppas,828 :: 		
$0144	$0AFC			INCF	STACK_12, F
;math_double.ppas,829 :: 		
$0145	$1903			BTFSC	STATUS, Z
;math_double.ppas,830 :: 		
$0146	$0AF8			INCF	STACK_8, F
;math_double.ppas,831 :: 		
$0147	$1D03			BTFSS	STATUS, Z
;math_double.ppas,832 :: 		
$0148	$294F			GOTO	DIV32OK
;math_double.ppas,833 :: 		
$0149	$0CF8			RRF	STACK_8, F
;math_double.ppas,834 :: 		
$014A	$0CFC			RRF	STACK_12, F
;math_double.ppas,835 :: 		
$014B	$0CFD			RRF	STACK_13, F
;math_double.ppas,836 :: 		
$014C	$0AF3			INCF	STACK_3, F
;math_double.ppas,837 :: 		
$014D	$1903			BTFSC	STATUS, Z
;math_double.ppas,838 :: 		
$014E	$295F			GOTO	JPDSETFOV32
;math_double.ppas,839 :: 		
$014F	$	DIV32OK:
;math_double.ppas,840 :: 		
$014F	$1FFA			BTFSS	STACK_10, 7
;math_double.ppas,841 :: 		
$0150	$13F8			BCF	STACK_8, 7
;math_double.ppas,842 :: 		
$0151	$0878			MOVF	STACK_8, W
;math_double.ppas,843 :: 		
$0152	$00F2			MOVWF	STACK_2
;math_double.ppas,844 :: 		
$0153	$087C			MOVF	STACK_12, W
;math_double.ppas,845 :: 		
$0154	$00F1			MOVWF	STACK_1
;math_double.ppas,846 :: 		
$0155	$087D			MOVF	STACK_13, W
;math_double.ppas,848 :: 		
$0156	$00F0			MOVWF	STACK_0
;math_double.ppas,850 :: 		
$0157	$3000			MOVLW	0X00
;math_double.ppas,851 :: 		
$0158	$2964			GOTO	DIV32EEE
;math_double.ppas,852 :: 		
$0159	$	JPDSETFDZ32:
;math_double.ppas,854 :: 		
$0159	$3001			MOVLW	0X01
;math_double.ppas,856 :: 		
$015A	$24F6			CALL	_setfdz32
;math_double.ppas,858 :: 		
$015B	$2964			GOTO	DIV32EEE
;math_double.ppas,859 :: 		
$015C	$	JPDRES032:
;math_double.ppas,861 :: 		
$015C	$3002			MOVLW	0X02
;math_double.ppas,863 :: 		
$015D	$24E0			CALL	_res032
;math_double.ppas,865 :: 		
$015E	$2964			GOTO	DIV32EEE
;math_double.ppas,866 :: 		
$015F	$	JPDSETFOV32:
;math_double.ppas,868 :: 		
$015F	$3004			MOVLW	0X04
;math_double.ppas,870 :: 		
$0160	$24B7			CALL	_setfov32
;math_double.ppas,872 :: 		
$0161	$2964			GOTO	DIV32EEE
;math_double.ppas,873 :: 		
$0162	$	JPDSETFUN32:
;math_double.ppas,875 :: 		
$0162	$3008			MOVLW	0X08
;math_double.ppas,877 :: 		
$0163	$24C5			CALL	_setfun32
;math_double.ppas,879 :: 		
$0164	$	DIV32EEE:
;math_double.ppas,880 :: 		
$0164	$0000			NOP
;math_double.ppas,881 :: 		
$0165	$	math_double_L_10:
;math_double.ppas,882 :: 		
$0165	$0008			RETURN
$02C6	$	_double2int:
$02C6	$1303			BCF	STATUS, RP1
$02C7	$1283			BCF	STATUS, RP0
;math_double.ppas,1272 :: 		
;math_double.ppas,1280 :: 		
$02C8	$	INT3216:
;math_double.ppas,1281 :: 		
$02C8	$01FB			CLRF	STACK_11
;math_double.ppas,1282 :: 		
$02C9	$0873			MOVF	STACK_3, W
;math_double.ppas,1283 :: 		
$02CA	$1903			BTFSC	STATUS, Z
;math_double.ppas,1285 :: 		
$02CB	$2B03			GOTO	IRES016
;math_double.ppas,1286 :: 		
$02CC	$0872			MOVF	STACK_2, W
;math_double.ppas,1287 :: 		
$02CD	$00FA			MOVWF	STACK_10
;math_double.ppas,1289 :: 		
$02CE	$17F2			BSF	STACK_2, 7
;math_double.ppas,1290 :: 		
$02CF	$308E			MOVLW	142
;math_double.ppas,1291 :: 		
$02D0	$02F3			SUBWF	STACK_3, F
;math_double.ppas,1292 :: 		
$02D1	$1FF3			BTFSS	STACK_3, 7
;math_double.ppas,1293 :: 		
$02D2	$2B06			GOTO	SETIOV16
;math_double.ppas,1294 :: 		
$02D3	$09F3			COMF	STACK_3, F
;math_double.ppas,1296 :: 		
$02D4	$0AF3			INCF	STACK_3, F
;math_double.ppas,1297 :: 		
$02D5	$3008			MOVLW	8
;math_double.ppas,1298 :: 		
$02D6	$0273			SUBWF	STACK_3, W
;math_double.ppas,1299 :: 		
$02D7	$1C03			BTFSS	STATUS, C
;math_double.ppas,1300 :: 		
$02D8	$2AE9			GOTO	TSHIFT3216
;math_double.ppas,1301 :: 		
$02D9	$00F3			MOVWF	STACK_3
;math_double.ppas,1302 :: 		
$02DA	$0DF1			RLF	STACK_1, F
;math_double.ppas,1303 :: 		
$02DB	$0872			MOVF	STACK_2, W
;math_double.ppas,1304 :: 		
$02DC	$00F1			MOVWF	STACK_1
;math_double.ppas,1306 :: 		
$02DD	$01F2			CLRF	STACK_2
;math_double.ppas,1307 :: 		
$02DE	$3008			MOVLW	8
;math_double.ppas,1308 :: 		
$02DF	$0273			SUBWF	STACK_3, W
;math_double.ppas,1309 :: 		
$02E0	$1C03			BTFSS	STATUS, C
;math_double.ppas,1310 :: 		
$02E1	$2AE9			GOTO	TSHIFT3216
;math_double.ppas,1311 :: 		
$02E2	$00F3			MOVWF	STACK_3
;math_double.ppas,1312 :: 		
$02E3	$0DF1			RLF	STACK_1, F
;math_double.ppas,1314 :: 		
$02E4	$01F1			CLRF	STACK_1
;math_double.ppas,1315 :: 		
$02E5	$0873			MOVF	STACK_3, W
;math_double.ppas,1316 :: 		
$02E6	$1D03			BTFSS	STATUS, Z
;math_double.ppas,1317 :: 		
$02E7	$1003			BCF	STATUS, C
;math_double.ppas,1318 :: 		
$02E8	$2AF1			GOTO	SHIFT3216OK
;math_double.ppas,1319 :: 		
$02E9	$	TSHIFT3216:
;math_double.ppas,1320 :: 		
$02E9	$0873			MOVF	STACK_3, W
;math_double.ppas,1321 :: 		
$02EA	$1903			BTFSC	STATUS, Z
;math_double.ppas,1322 :: 		
$02EB	$2AF1			GOTO	SHIFT3216OK
;math_double.ppas,1323 :: 		
$02EC	$	SHIFT3216:
;math_double.ppas,1324 :: 		
$02EC	$1003			BCF	STATUS, C
;math_double.ppas,1325 :: 		
$02ED	$0CF2			RRF	STACK_2, F
;math_double.ppas,1326 :: 		
$02EE	$0CF1			RRF	STACK_1, F
;math_double.ppas,1327 :: 		
$02EF	$0BF3			DECFSZ	STACK_3, F
;math_double.ppas,1328 :: 		
$02F0	$2AEC			GOTO	SHIFT3216
;math_double.ppas,1329 :: 		
$02F1	$	SHIFT3216OK:
;math_double.ppas,1330 :: 		
$02F1	$1B7B			BTFSC	STACK_11, 6
;math_double.ppas,1331 :: 		
$02F2	$1C71			BTFSS	STACK_1, 0
;math_double.ppas,1332 :: 		
$02F3	$2AFB			GOTO	INT3216OK
;math_double.ppas,1333 :: 		
$02F4	$1C03			BTFSS	STATUS, C
;math_double.ppas,1334 :: 		
$02F5	$2AFB			GOTO	INT3216OK
;math_double.ppas,1335 :: 		
$02F6	$0AF1			INCF	STACK_1, F
;math_double.ppas,1336 :: 		
$02F7	$1903			BTFSC	STATUS, Z
;math_double.ppas,1337 :: 		
$02F8	$0AF2			INCF	STACK_2, F
;math_double.ppas,1338 :: 		
$02F9	$1BF2			BTFSC	STACK_2, 7
;math_double.ppas,1339 :: 		
$02FA	$2B12			GOTO	JPJSETIOV3224
;math_double.ppas,1340 :: 		
$02FB	$	INT3216OK:
;math_double.ppas,1341 :: 		
$02FB	$1FFA			BTFSS	STACK_10, 7
;math_double.ppas,1343 :: 		
$02FC	$2B15			GOTO	INT3216EOK
;math_double.ppas,1344 :: 		
$02FD	$09F2			COMF	STACK_2, F
;math_double.ppas,1345 :: 		
$02FE	$09F1			COMF	STACK_1, F
;math_double.ppas,1346 :: 		
$02FF	$0AF1			INCF	STACK_1, F
;math_double.ppas,1347 :: 		
$0300	$1903			BTFSC	STATUS, Z
;math_double.ppas,1348 :: 		
$0301	$0AF2			INCF	STACK_2, F
;math_double.ppas,1350 :: 		
$0302	$2B15			GOTO	INT3216EOK
;math_double.ppas,1351 :: 		
$0303	$	IRES016:
;math_double.ppas,1352 :: 		
$0303	$01F2			CLRF	STACK_2
;math_double.ppas,1353 :: 		
$0304	$01F1			CLRF	STACK_1
;math_double.ppas,1354 :: 		
$0305	$2B15			GOTO	INT3216EOK
;math_double.ppas,1355 :: 		
$0306	$	SETIOV16:
;math_double.ppas,1356 :: 		
$0306	$147B			BSF	STACK_11, 0
;math_double.ppas,1357 :: 		
$0307	$1FFB			BTFSS	STACK_11, 7
;math_double.ppas,1359 :: 		
$0308	$2B18			GOTO	INT3216EER
;math_double.ppas,1360 :: 		
$0309	$01F2			CLRF	STACK_2
;math_double.ppas,1361 :: 		
$030A	$1FFA			BTFSS	STACK_10, 7
;math_double.ppas,1362 :: 		
$030B	$2B18			GOTO	INT3216EER
;math_double.ppas,1363 :: 		
$030C	$30FF			MOVLW	0XFF
;math_double.ppas,1364 :: 		
$030D	$00F2			MOVWF	STACK_2
;math_double.ppas,1365 :: 		
$030E	$00F1			MOVWF	STACK_1
;math_double.ppas,1366 :: 		
$030F	$0DFA			RLF	STACK_10, F
;math_double.ppas,1367 :: 		
$0310	$0CF2			RRF	STACK_2, F
;math_double.ppas,1369 :: 		
$0311	$2B18			GOTO	INT3216EER
;math_double.ppas,1370 :: 		
$0312	$	JPJSETIOV3224:
;math_double.ppas,1371 :: 		
$0312	$3001			MOVLW	0X01
;math_double.ppas,1372 :: 		
$0313	$00FC			MOVWF	STACK_12
;math_double.ppas,1373 :: 		
$0314	$2B1A			GOTO	INT3216EEE
;math_double.ppas,1374 :: 		
$0315	$	INT3216EOK:
;math_double.ppas,1375 :: 		
$0315	$3000			MOVLW	0X00
;math_double.ppas,1376 :: 		
$0316	$00FC			MOVWF	STACK_12
;math_double.ppas,1377 :: 		
$0317	$2B1A			GOTO	INT3216EEE
;math_double.ppas,1378 :: 		
$0318	$	INT3216EER:
;math_double.ppas,1379 :: 		
$0318	$30FF			MOVLW	0XFF
;math_double.ppas,1380 :: 		
$0319	$00FC			MOVWF	STACK_12
;math_double.ppas,1383 :: 		
$031A	$	INT3216EEE:
;math_double.ppas,1385 :: 		
$031A	$08FC			MOVF	STACK_12, F
;math_double.ppas,1386 :: 		
$031B	$1903			BTFSC	STATUS, Z
;math_double.ppas,1387 :: 		
$031C	$2B1E			GOTO	L_DOUBLE2INT_0
;math_double.ppas,1389 :: 		
$031D	$24A8			CALL	_setiov3224
;math_double.ppas,1391 :: 		
$031E	$	L_DOUBLE2INT_0:
;math_double.ppas,1392 :: 		
$031E	$0871			MOVF	STACK_1, W
;math_double.ppas,1393 :: 		
$031F	$00F0			MOVWF	STACK_0
;math_double.ppas,1394 :: 		
$0320	$0872			MOVF	STACK_2, W
;math_double.ppas,1395 :: 		
$0321	$00F1			MOVWF	STACK_1
;math_double.ppas,1396 :: 		
$0322	$	math_double_L_14:
;math_double.ppas,1398 :: 		
$0322	$0008			RETURN
$0004	$	_main:
;comunicacao.pbas,7 :: 		main:
$0004	$	_main_main:
;comunicacao.pbas,8 :: 		TRISA  = %11111111
$0004	$30FF			MOVLW	255
$0005	$1303			BCF	STATUS, RP1
$0006	$1683			BSF	STATUS, RP0
$0007	$0085			MOVWF	TRISA
;comunicacao.pbas,9 :: 		TRISB  = %01111111
$0008	$307F			MOVLW	127
$0009	$0086			MOVWF	TRISB
;comunicacao.pbas,10 :: 		TRISC  = %00000000
$000A	$0187			CLRF	TRISC, 1
;comunicacao.pbas,11 :: 		INTCON = %00000000
$000B	$018B			CLRF	INTCON, 1
;comunicacao.pbas,14 :: 		ANSEL  = %00000000
$000C	$1703			BSF	STATUS, RP1
$000D	$1283			BCF	STATUS, RP0
$000E	$019E			CLRF	ANSEL, 1
;comunicacao.pbas,15 :: 		ANSELH = %00000000
$000F	$019F			CLRF	ANSELH, 1
;comunicacao.pbas,16 :: 		PORTC  = 0
$0010	$1303			BCF	STATUS, RP1
$0011	$0187			CLRF	PORTC, 1
;comunicacao.pbas,18 :: 		Usart_Init(9600)
$0012	$3019			MOVLW	25
$0013	$1683			BSF	STATUS, RP0
$0014	$0099			MOVWF	SPBRG
$0015	$1518			BSF	TXSTA, BRGH
$0016	$245E			CALL	_usart_init
;comunicacao.pbas,20 :: 		executa:
$0017	$	_main_executa:
;comunicacao.pbas,21 :: 		if Usart_Data_Ready() > 0 then
$0017	$24D3			CALL	_usart_data_ready
$0018	$0870			MOVF	STACK_0, 0
$0019	$3C00			SUBLW	0
$001A	$1803			BTFSC	STATUS, C
$001B	$28C8			GOTO	comunicacao_L_2
$001C	$	comunicacao_L_1:
;comunicacao.pbas,22 :: 		recebe=Usart_Read()
$001C	$2483			CALL	_usart_read
$001D	$0870			MOVF	STACK_0, 0
$001E	$00A1			MOVWF	_recebe
;comunicacao.pbas,25 :: 		if recebe=5 then
$001F	$0870			MOVF	STACK_0, 0
$0020	$3A05			XORLW	5
$0021	$1D03			BTFSS	STATUS, Z
$0022	$28C8			GOTO	comunicacao_L_5
$0023	$	comunicacao_L_4:
;comunicacao.pbas,28 :: 		if PORTA.0=1 then
$0023	$3001			MOVLW	1
$0024	$0505			ANDWF	PORTA, 0
$0025	$00F4			MOVWF	STACK_4
$0026	$0874			MOVF	STACK_4, 0
$0027	$3A01			XORLW	1
$0028	$1D03			BTFSS	STATUS, Z
$0029	$2832			GOTO	comunicacao_L_8
$002A	$	comunicacao_L_7:
;comunicacao.pbas,29 :: 		Usart_Write_Text("1")
$002A	$3031			MOVLW	49
$002B	$00AF			MOVWF	?main_Local_Text+0
$002C	$01B0			CLRF	?main_Local_Text+1
$002D	$302F			MOVLW	?main_Local_Text
$002E	$00B7			MOVWF	FARG_Usart_Write_Text
$002F	$2432			CALL	_usart_write_text
;comunicacao.pbas,30 :: 		PORTC.0=1
$0030	$	comunicacao_L_10:
$0030	$1407			BSF	PORTC, 0
$0031	$	comunicacao_L_11:
$0031	$2839			GOTO	comunicacao_L_9
;comunicacao.pbas,31 :: 		else
$0032	$	comunicacao_L_8:
;comunicacao.pbas,32 :: 		Usart_Write_Text("0")
$0032	$3030			MOVLW	48
$0033	$00AF			MOVWF	?main_Local_Text+0
$0034	$01B0			CLRF	?main_Local_Text+1
$0035	$302F			MOVLW	?main_Local_Text
$0036	$00B7			MOVWF	FARG_Usart_Write_Text
$0037	$2432			CALL	_usart_write_text
;comunicacao.pbas,33 :: 		PORTC.0=0
$0038	$1007			BCF	PORTC, 0
$0039	$	comunicacao_L_13:
;comunicacao.pbas,34 :: 		end if
$0039	$	comunicacao_L_9:
;comunicacao.pbas,37 :: 		if PORTA.3=1 then
$0039	$3000			MOVLW	0
$003A	$1985			BTFSC	PORTA, 3
$003B	$3001			MOVLW	1
$003C	$00F4			MOVWF	STACK_4
$003D	$0874			MOVF	STACK_4, 0
$003E	$3A01			XORLW	1
$003F	$1D03			BTFSS	STATUS, Z
$0040	$2849			GOTO	comunicacao_L_15
$0041	$	comunicacao_L_14:
;comunicacao.pbas,38 :: 		Usart_Write_Text("1")
$0041	$3031			MOVLW	49
$0042	$00AF			MOVWF	?main_Local_Text+0
$0043	$01B0			CLRF	?main_Local_Text+1
$0044	$302F			MOVLW	?main_Local_Text
$0045	$00B7			MOVWF	FARG_Usart_Write_Text
$0046	$2432			CALL	_usart_write_text
;comunicacao.pbas,39 :: 		PORTC.1=1
$0047	$	comunicacao_L_17:
$0047	$1487			BSF	PORTC, 1
$0048	$	comunicacao_L_18:
$0048	$2850			GOTO	comunicacao_L_16
;comunicacao.pbas,40 :: 		else
$0049	$	comunicacao_L_15:
;comunicacao.pbas,41 :: 		Usart_Write_Text("0")
$0049	$3030			MOVLW	48
$004A	$00AF			MOVWF	?main_Local_Text+0
$004B	$01B0			CLRF	?main_Local_Text+1
$004C	$302F			MOVLW	?main_Local_Text
$004D	$00B7			MOVWF	FARG_Usart_Write_Text
$004E	$2432			CALL	_usart_write_text
;comunicacao.pbas,42 :: 		PORTC.1=0
$004F	$1087			BCF	PORTC, 1
$0050	$	comunicacao_L_20:
;comunicacao.pbas,43 :: 		end if
$0050	$	comunicacao_L_16:
;comunicacao.pbas,46 :: 		if PORTA.2=1 then
$0050	$3000			MOVLW	0
$0051	$1905			BTFSC	PORTA, 2
$0052	$3001			MOVLW	1
$0053	$00F4			MOVWF	STACK_4
$0054	$0874			MOVF	STACK_4, 0
$0055	$3A01			XORLW	1
$0056	$1D03			BTFSS	STATUS, Z
$0057	$2860			GOTO	comunicacao_L_22
$0058	$	comunicacao_L_21:
;comunicacao.pbas,47 :: 		Usart_Write_Text("1")
$0058	$3031			MOVLW	49
$0059	$00AF			MOVWF	?main_Local_Text+0
$005A	$01B0			CLRF	?main_Local_Text+1
$005B	$302F			MOVLW	?main_Local_Text
$005C	$00B7			MOVWF	FARG_Usart_Write_Text
$005D	$2432			CALL	_usart_write_text
;comunicacao.pbas,48 :: 		PORTC.2=1
$005E	$	comunicacao_L_24:
$005E	$1507			BSF	PORTC, 2
$005F	$	comunicacao_L_25:
$005F	$2867			GOTO	comunicacao_L_23
;comunicacao.pbas,49 :: 		else
$0060	$	comunicacao_L_22:
;comunicacao.pbas,50 :: 		Usart_Write_Text("0")
$0060	$3030			MOVLW	48
$0061	$00AF			MOVWF	?main_Local_Text+0
$0062	$01B0			CLRF	?main_Local_Text+1
$0063	$302F			MOVLW	?main_Local_Text
$0064	$00B7			MOVWF	FARG_Usart_Write_Text
$0065	$2432			CALL	_usart_write_text
;comunicacao.pbas,51 :: 		PORTC.2=0
$0066	$1107			BCF	PORTC, 2
$0067	$	comunicacao_L_27:
;comunicacao.pbas,52 :: 		end if
$0067	$	comunicacao_L_23:
;comunicacao.pbas,54 :: 		Usart_Write_Text("0")
$0067	$3030			MOVLW	48
$0068	$00AF			MOVWF	?main_Local_Text+0
$0069	$01B0			CLRF	?main_Local_Text+1
$006A	$302F			MOVLW	?main_Local_Text
$006B	$00B7			MOVWF	FARG_Usart_Write_Text
$006C	$2432			CALL	_usart_write_text
;comunicacao.pbas,55 :: 		Usart_Write_Text("0")
$006D	$3030			MOVLW	48
$006E	$00AF			MOVWF	?main_Local_Text+0
$006F	$01B0			CLRF	?main_Local_Text+1
$0070	$302F			MOVLW	?main_Local_Text
$0071	$00B7			MOVWF	FARG_Usart_Write_Text
$0072	$2432			CALL	_usart_write_text
;comunicacao.pbas,58 :: 		leitura = Adc_Read(1)
$0073	$3001			MOVLW	1
$0074	$00B7			MOVWF	FARG_ADC_read
$0075	$23AE			CALL	_adc_read
$0076	$0870			MOVF	STACK_0, 0
$0077	$00B5			MOVWF	FLOC_main+6
$0078	$0871			MOVF	STACK_0+1, 0
$0079	$00B6			MOVWF	FLOC_main+7
$007A	$0835			MOVF	FLOC_main+6, 0
$007B	$00A2			MOVWF	_leitura
$007C	$0836			MOVF	FLOC_main+7, 0
$007D	$00A3			MOVWF	_leitura+1
;comunicacao.pbas,59 :: 		temperatura = ( ( 80 * leitura ) / 1023 )
$007E	$3050			MOVLW	80
$007F	$00F0			MOVWF	STACK_0
$0080	$2473			CALL	_byte2double
$0081	$0870			MOVF	STACK_0, 0
$0082	$00B1			MOVWF	FLOC_main+2
$0083	$0871			MOVF	STACK_0+1, 0
$0084	$00B2			MOVWF	FLOC_main+3
$0085	$0872			MOVF	STACK_0+2, 0
$0086	$00B3			MOVWF	FLOC_main+4
$0087	$0873			MOVF	STACK_0+3, 0
$0088	$00B4			MOVWF	FLOC_main+5
$0089	$0835			MOVF	FLOC_main+6, 0
$008A	$00F0			MOVWF	STACK_0
$008B	$0836			MOVF	FLOC_main+7, 0
$008C	$00F1			MOVWF	STACK_0+1
$008D	$2414			CALL	_int2double
$008E	$0831			MOVF	FLOC_main+2, 0
$008F	$00F4			MOVWF	STACK_4
$0090	$0832			MOVF	FLOC_main+3, 0
$0091	$00F5			MOVWF	STACK_4+1
$0092	$0833			MOVF	FLOC_main+4, 0
$0093	$00F6			MOVWF	STACK_4+2
$0094	$0834			MOVF	FLOC_main+5, 0
$0095	$00F7			MOVWF	STACK_4+3
$0096	$2209			CALL	_mul_32x32_fp
$0097	$0870			MOVF	STACK_0, 0
$0098	$00B1			MOVWF	FLOC_main+2
$0099	$0871			MOVF	STACK_0+1, 0
$009A	$00B2			MOVWF	FLOC_main+3
$009B	$0872			MOVF	STACK_0+2, 0
$009C	$00B3			MOVWF	FLOC_main+4
$009D	$0873			MOVF	STACK_0+3, 0
$009E	$00B4			MOVWF	FLOC_main+5
$009F	$30FF			MOVLW	255
$00A0	$00F0			MOVWF	STACK_0
$00A1	$3003			MOVLW	3
$00A2	$00F1			MOVWF	STACK_0+1
$00A3	$2448			CALL	_word2double
$00A4	$0870			MOVF	STACK_0, 0
$00A5	$00F4			MOVWF	STACK_4
$00A6	$0871			MOVF	STACK_0+1, 0
$00A7	$00F5			MOVWF	STACK_4+1
$00A8	$0872			MOVF	STACK_0+2, 0
$00A9	$00F6			MOVWF	STACK_4+2
$00AA	$0873			MOVF	STACK_0+3, 0
$00AB	$00F7			MOVWF	STACK_4+3
$00AC	$0831			MOVF	FLOC_main+2, 0
$00AD	$00F0			MOVWF	STACK_0
$00AE	$0832			MOVF	FLOC_main+3, 0
$00AF	$00F1			MOVWF	STACK_0+1
$00B0	$0833			MOVF	FLOC_main+4, 0
$00B1	$00F2			MOVWF	STACK_0+2
$00B2	$0834			MOVF	FLOC_main+5, 0
$00B3	$00F3			MOVWF	STACK_0+3
$00B4	$20CA			CALL	_div_32x32_fp
$00B5	$0870			MOVF	STACK_0, 0
$00B6	$00A4			MOVWF	_temperatura
$00B7	$0871			MOVF	STACK_0+1, 0
$00B8	$00A5			MOVWF	_temperatura+1
$00B9	$0872			MOVF	STACK_0+2, 0
$00BA	$00A6			MOVWF	_temperatura+2
$00BB	$0873			MOVF	STACK_0+3, 0
$00BC	$00A7			MOVWF	_temperatura+3
;comunicacao.pbas,60 :: 		IntToStr(temperatura, texto)
$00BD	$22C6			CALL	_double2int
$00BE	$0870			MOVF	STACK_0, 0
$00BF	$00B7			MOVWF	FARG_IntToStr
$00C0	$0871			MOVF	STACK_0+1, 0
$00C1	$00B8			MOVWF	FARG_IntToStr+1
$00C2	$3028			MOVLW	_texto
$00C3	$00B9			MOVWF	FARG_IntToStr+2
$00C4	$2166			CALL	_inttostr
;comunicacao.pbas,61 :: 		Usart_Write_Text(texto)
$00C5	$3028			MOVLW	_texto
$00C6	$00B7			MOVWF	FARG_Usart_Write_Text
$00C7	$2432			CALL	_usart_write_text
$00C8	$	comunicacao_L_5:
;comunicacao.pbas,62 :: 		end if
$00C8	$	comunicacao_L_6:
$00C8	$	comunicacao_L_2:
;comunicacao.pbas,63 :: 		end if
$00C8	$	comunicacao_L_3:
;comunicacao.pbas,65 :: 		goto executa
$00C8	$2817			GOTO	_main_executa
$00C9	$28C9			GOTO	$
